apiVersion: v1
kind: Secret
metadata:
  labels:
    app: nl-parser
    app.kubernetes.io/component: nl-parser
    app.kubernetes.io/instance: nl-parser
    app.kubernetes.io/name: nl-parser
    app.kubernetes.io/version: 2.51.0
    chart: nl-parser-2.51.0
    domain: nlp-cognitive
    heritage: Helm
    release: nl-parser
  name: nl-parser-secrets
  namespace: default
type: Opaque
---
apiVersion: v1
data:
  dataPrepUri: http://data-prep:9072
  ingressAuthUrl: http://edge-auth.$(NAMESPACE).svc.cluster.local:8080/v1/auth
  logLevel: info
  nlAppSearchUri: http://nl-app-search:9085
  nlParserModelUrl: http://nl-parser-model:8501/v1/models/intentsrl:predict
kind: ConfigMap
metadata:
  labels:
    app: nl-parser
    app.kubernetes.io/component: nl-parser
    app.kubernetes.io/instance: nl-parser
    app.kubernetes.io/name: nl-parser
    app.kubernetes.io/version: 2.51.0
    chart: nl-parser-2.51.0
    domain: nlp-cognitive
    heritage: Helm
    release: nl-parser
  name: nl-parser-configs
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "30302"
    prometheus.io/scrape: "true"
  labels:
    app: nl-parser
    app.kubernetes.io/component: nl-parser
    app.kubernetes.io/instance: nl-parser
    app.kubernetes.io/name: nl-parser
    app.kubernetes.io/version: 2.51.0
    chart: nl-parser-2.51.0
    domain: nlp-cognitive
    heritage: Helm
    release: nl-parser
  name: nl-parser
  namespace: default
spec:
  ports:
    - name: nl-parser
      port: 30302
      protocol: TCP
      targetPort: 30302
  selector:
    app: nl-parser
    release: nl-parser
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/path: /monitoring/prometheus/metrics
    prometheus.io/port: "8501"
    prometheus.io/scrape: "true"
  labels:
    app: nl-parser-model
    app.kubernetes.io/component: nl-parser
    app.kubernetes.io/instance: nl-parser
    app.kubernetes.io/name: nl-parser
    app.kubernetes.io/version: 2.51.0
    chart: nl-parser-2.51.0
    domain: nlp-cognitive
    heritage: Helm
    release: nl-parser
  name: nl-parser-model
  namespace: default
spec:
  ports:
    - name: nl-parser
      port: 8501
      protocol: TCP
      targetPort: 8501
  selector:
    app: nl-parser-model
    release: nl-parser
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nl-parser
    app.kubernetes.io/component: nl-parser
    app.kubernetes.io/instance: nl-parser
    app.kubernetes.io/name: nl-parser
    app.kubernetes.io/version: 2.51.0
    chart: nl-parser-2.51.0
    domain: nlp-cognitive
    heritage: Helm
    release: nl-parser
  name: nl-parser
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nl-parser
      release: nl-parser
  template:
    metadata:
      annotations:
        checksum/configs: 853657406d3db33bf8c7a7bbbe93152b5cb2c3197c2e8c0bffb880bb192369e4
        checksum/secrets: 995982a5461f4637e165280b7d7e3b15c0b2b161fe5618c017c2b186db04d524
      labels:
        app: nl-parser
        domain: nlp-cognitive
        release: nl-parser
    spec:
      containers:
        - env:
            - name: DATA_PREP_URI
              valueFrom:
                configMapKeyRef:
                  key: dataPrepUri
                  name: nl-parser-configs
            - name: INGRESS_AUTH_URL
              valueFrom:
                configMapKeyRef:
                  key: ingressAuthUrl
                  name: nl-parser-configs
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: logLevel
                  name: nl-parser-configs
            - name: NL_APP_SEARCH_URI
              valueFrom:
                configMapKeyRef:
                  key: nlAppSearchUri
                  name: nl-parser-configs
            - name: NL_PARSER_MODEL_URL
              valueFrom:
                configMapKeyRef:
                  key: nlParserModelUrl
                  name: nl-parser-configs
            - name: DISABLE_OTLP
              value: "true"
            - name: JAEGER_DISABLED
              value: "true"
            - name: DPS_ROUTING_ENABLED
              value: "false"
            - name: NLU_MULTI_LINGUAL
              value: "true"
            - name: JAEGER_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTLP_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: HTTP_PROXY
              valueFrom:
                configMapKeyRef:
                  key: httpProxy
                  name: qliksense-configs
            - name: HTTPS_PROXY
              valueFrom:
                configMapKeyRef:
                  key: httpsProxy
                  name: qliksense-configs
            - name: NO_PROXY
              valueFrom:
                configMapKeyRef:
                  key: noProxy
                  name: qliksense-configs
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  key: mongodbUri
                  name: qliksense-secrets
            - name: MONGODB_URI_FILE
              value: /run/secrets/qlik.com/qliksense/mongodbUri
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: redisPassword
                  name: qliksense-secrets
            - name: REDIS_PASSWORD_FILE
              value: /run/secrets/qlik.com/qliksense/redisPassword
          image: ghcr.io/qlik-download/nl-parser:2.51.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 30302
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: nl-parser
          ports:
            - containerPort: 30302
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: ca-certificates
            - mountPath: /run/secrets/qlik.com/qliksense
              name: qliksense-secrets
      imagePullSecrets:
        - name: artifactory-docker-secret
      volumes:
        - name: nl-parser-secrets
          secret:
            secretName: nl-parser-secrets
        - name: ca-certificates
          persistentVolumeClaim:
            claimName: ca-certificates
        - name: qliksense-secrets
          secret:
            secretName: qliksense-secrets
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nl-parser-model
    app.kubernetes.io/component: nl-parser
    app.kubernetes.io/instance: nl-parser
    app.kubernetes.io/name: nl-parser
    app.kubernetes.io/version: 2.51.0
    chart: nl-parser-2.51.0
    domain: nlp-cognitive
    heritage: Helm
    release: nl-parser
  name: nl-parser-model
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nl-parser-model
      release: nl-parser
  template:
    metadata:
      annotations:
        checksum/configs: 853657406d3db33bf8c7a7bbbe93152b5cb2c3197c2e8c0bffb880bb192369e4
        checksum/secrets: 995982a5461f4637e165280b7d7e3b15c0b2b161fe5618c017c2b186db04d524
      labels:
        app: nl-parser-model
        domain: nlp-cognitive
        release: nl-parser
    spec:
      containers:
        - env:
            - name: MODEL_NAME
              value: intentsrl
            - name: TF_CPP_VMODULE
              value: http_server=1
            - name: JAEGER_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTLP_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: HTTP_PROXY
              valueFrom:
                configMapKeyRef:
                  key: httpProxy
                  name: qliksense-configs
            - name: HTTPS_PROXY
              valueFrom:
                configMapKeyRef:
                  key: httpsProxy
                  name: qliksense-configs
            - name: NO_PROXY
              valueFrom:
                configMapKeyRef:
                  key: noProxy
                  name: qliksense-configs
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  key: mongodbUri
                  name: qliksense-secrets
            - name: MONGODB_URI_FILE
              value: /run/secrets/qlik.com/qliksense/mongodbUri
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: redisPassword
                  name: qliksense-secrets
            - name: REDIS_PASSWORD_FILE
              value: /run/secrets/qlik.com/qliksense/redisPassword
          image: ghcr.io/qlik-download/nl-parser-model:2.51.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /v1/models/intentsrl
              port: http-model
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: nl-parser-model
          ports:
            - containerPort: 8501
              name: http-model
              protocol: TCP
          startupProbe:
            failureThreshold: 25
            httpGet:
              path: /v1/models/intentsrl
              port: http-model
            initialDelaySeconds: 15
            periodSeconds: 2
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: ca-certificates
            - mountPath: /run/secrets/qlik.com/qliksense
              name: qliksense-secrets
      imagePullSecrets:
        - name: artifactory-docker-secret
      volumes:
        - name: nl-parser-secrets
          secret:
            secretName: nl-parser-secrets
        - name: ca-certificates
          persistentVolumeClaim:
            claimName: ca-certificates
        - name: qliksense-secrets
          secret:
            secretName: qliksense-secrets
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/auth-response-headers: Authorization
    nginx.ingress.kubernetes.io/auth-url: http://edge-auth.$(NAMESPACE).svc.cluster.local:8080/v1/auth
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite (?i)/api/v1/(.*) /v1/$1 break;
  labels:
    app: nl-parser
    app.kubernetes.io/component: nl-parser
    app.kubernetes.io/instance: nl-parser
    app.kubernetes.io/name: nl-parser
    app.kubernetes.io/version: 2.51.0
    chart: nl-parser-2.51.0
    domain: nlp-cognitive
    heritage: Helm
    release: nl-parser
  name: nl-parser
  namespace: default
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - backend:
              service:
                name: nl-parser
                port:
                  number: 30302
            path: /api/v1/parse
            pathType: ImplementationSpecific
          - backend:
              service:
                name: nl-parser-model
                port:
                  number: 8501
            path: /api/v1/models
            pathType: ImplementationSpecific
