apiVersion: v1
data:
  redisAclPassword: cmVwb3J0aW5nLXJlZGlzLWFjbC1wYXNzd29yZC0yODEyNzQ=
  redisPassword: TkdrVXAwVkRKdGMzeGl5Qw==
  tokenAuthPrivateKey: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1JR2tBZ0VCQkRDbWN4VFM0OThsVmxSS0kreEdveU9hbE1jT0xlMlR0THhlT01yc05OeHhnUGdORENqdVJNM00KNmt5eG0yTkJRYjZnQndZRks0RUVBQ0toWkFOaUFBUTZXT01DeXFReFBFR0kydm9iSEJ1amJ1QUkvUTIxbzRUNQpuNEFSNTBoajN1YzUxeFpwVWpFRVE4a3IvcTV0OXhpbmpaQURVV3dBcTAzdnBOQVhlODVyU0dveTVwL1N4NEZpCml2S0Z2d0pBTnR1Z3ZFb0xVZmd6VHU5WjFpbkFwRUE9Ci0tLS0tRU5EIEVDIFBSSVZBVEUgS0VZLS0tLS0K
  tokenAuthPrivateKeyId: N25IWjZyZnJ6emp4dWhxQnl1SXJMVFdnNEhuTnpnTU1RZFVSZ1VRS092Zw==
kind: Secret
metadata:
  labels:
    app: reporting
    app.kubernetes.io/component: reporting
    app.kubernetes.io/instance: reporting
    app.kubernetes.io/name: reporting
    app.kubernetes.io/version: 9.77.0
    chart: reporting-9.77.0
    heritage: Helm
    release: reporting
  name: reporting-secrets
  namespace: default
type: Opaque
---
apiVersion: v1
data:
  awss3Accesskey: minioadmin
  awss3Bucket: qlik-reporting-bucket
  awss3Region: some-region
  awss3Secretkey: minioadmin
  awss3Url: http://reporting-minio:9000/
  configmapName: $(REPORTING_CONFIGMAP_NAME)
  contentSizeThreshold: "102400"
  contentStorage: s3
  customizationUri: http://reporting-customization:8080
  defaultReportDeadline: PT10M
  edgeAuthUri: http://edge-auth:8080
  enableTracing: "false"
  encryptionUri: http://encryption:8080
  engineRestApiVersion: v1
  engineUri: http://engine:9076
  featureFlagsUri: http://feature-flags:8080
  ingressAuthUrl: http://edge-auth.$(NAMESPACE).svc.cluster.local:8080/v1/auth
  keysUri: http://keys:8080
  licensesUri: http://reporting-licenses:9200
  localeUri: http://locale:8080
  logLevel: info
  mainWebContainerUri: http://reporting-main-web-container:3025
  maxReportDeadline: PT2H
  natsStreamingClusterId: messaging-nats-streaming-cluster
  natsUri: nats://messaging-nats-client:4222
  notesUri: http://reporting-notes-broker:8080
  proxyUri: http://127.0.0.1:8001
  qixSessionsUri: http://qix-sessions:8080
  quotas: '{"tenantSessionQuotas":[]}'
  redisAclUser: ""
  redisUri: redis-master:6379
  reportingTemplatesUri: http://reporting-templates:8080
  resourceLibraryUri: http://resource-library:21068
  senseClientUri: http://sense-client:9050
  spacesUri: http://reporting-spaces:6080
  temporaryContentsUri: http://temporary-contents:6080
  tenantsUri: http://reporting-tenants:8080
  usersUri: http://reporting-identities:8080
kind: ConfigMap
metadata:
  labels:
    app: reporting
    app.kubernetes.io/component: reporting
    app.kubernetes.io/instance: reporting
    app.kubernetes.io/name: reporting
    app.kubernetes.io/version: 9.77.0
    chart: reporting-9.77.0
    heritage: Helm
    release: reporting
  name: reporting-configs
  namespace: default
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: reporting
    app.kubernetes.io/component: reporting
    app.kubernetes.io/instance: reporting
    app.kubernetes.io/name: reporting
    app.kubernetes.io/version: 9.77.0
    chart: reporting-9.77.0
    heritage: Helm
    release: reporting
  name: reporting
  namespace: default
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8282"
    prometheus.io/scrape: "true"
  labels:
    app: reporting
    app.kubernetes.io/component: reporting
    app.kubernetes.io/instance: reporting
    app.kubernetes.io/name: reporting
    app.kubernetes.io/version: 9.77.0
    chart: reporting-9.77.0
    heritage: Helm
    release: reporting
  name: reporting
  namespace: default
spec:
  ports:
    - name: reporting
      port: 8282
      targetPort: 8282
  selector:
    app: reporting
    release: reporting
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8383"
    prometheus.io/scrape: "true"
  labels:
    app: reporting
    app.kubernetes.io/component: reporting
    app.kubernetes.io/instance: reporting
    app.kubernetes.io/name: reporting
    app.kubernetes.io/version: 9.77.0
    chart: reporting-9.77.0
    heritage: Helm
    release: reporting
  name: reporting-cmp
  namespace: default
spec:
  ports:
    - name: reporting-cmp
      port: 8383
      targetPort: 8383
  selector:
    app: reporting
    release: reporting
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8484"
    prometheus.io/scrape: "true"
  labels:
    app: reporting
    app.kubernetes.io/component: reporting
    app.kubernetes.io/instance: reporting
    app.kubernetes.io/name: reporting
    app.kubernetes.io/version: 9.77.0
    chart: reporting-9.77.0
    heritage: Helm
    release: reporting
  name: reporting-rpr
  namespace: default
spec:
  ports:
    - name: reporting-rpr
      port: 8484
      targetPort: 8484
  selector:
    app: reporting
    release: reporting
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: reporting
    app.kubernetes.io/component: reporting
    app.kubernetes.io/instance: reporting
    app.kubernetes.io/name: reporting
    app.kubernetes.io/version: 9.77.0
    chart: reporting-9.77.0
    heritage: Helm
    release: reporting
  name: reporting-rwr
  namespace: default
spec:
  ports:
    - name: reporting-rwr
      port: 9288
      targetPort: 9288
  selector:
    app: reporting
    release: reporting
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: reporting
    app.kubernetes.io/component: reporting
    app.kubernetes.io/instance: reporting
    app.kubernetes.io/name: reporting
    app.kubernetes.io/version: 9.77.0
    chart: reporting-9.77.0
    heritage: Helm
    release: reporting
  name: reporting
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reporting
      release: reporting
  template:
    metadata:
      annotations:
        checksum/configs: cfb0c29d87f529eb1bb9c0785d3ad1d712859f6ad7cc222a0c884cc74d672a7c
        checksum/secrets: 317a49d1371246350f6f8d493a420d95df9264063efe6438f0f511705789e31b
      labels:
        app: reporting
        messaging-nats-client: "true"
        release: reporting
    spec:
      containers:
        - env:
            - name: NATS_CLIENT_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CUSTOMIZATION_URI
              valueFrom:
                configMapKeyRef:
                  key: customizationUri
                  name: reporting-configs
            - name: EDGE_AUTH_URI
              valueFrom:
                configMapKeyRef:
                  key: edgeAuthUri
                  name: reporting-configs
            - name: ENGINE_REST_API_VERSION
              valueFrom:
                configMapKeyRef:
                  key: engineRestApiVersion
                  name: reporting-configs
            - name: ENGINE_URI
              valueFrom:
                configMapKeyRef:
                  key: engineUri
                  name: reporting-configs
            - name: FEATURE_FLAGS_URI
              valueFrom:
                configMapKeyRef:
                  key: featureFlagsUri
                  name: reporting-configs
            - name: LICENSES_URI
              valueFrom:
                configMapKeyRef:
                  key: licensesUri
                  name: reporting-configs
            - name: LOCALE_URI
              valueFrom:
                configMapKeyRef:
                  key: localeUri
                  name: reporting-configs
            - name: MAIN_WEB_CONTAINER_URI
              valueFrom:
                configMapKeyRef:
                  key: mainWebContainerUri
                  name: reporting-configs
            - name: NOTES_URI
              valueFrom:
                configMapKeyRef:
                  key: notesUri
                  name: reporting-configs
            - name: PROXY_URI
              valueFrom:
                configMapKeyRef:
                  key: proxyUri
                  name: reporting-configs
            - name: RESOURCE_LIBRARY_URI
              valueFrom:
                configMapKeyRef:
                  key: resourceLibraryUri
                  name: reporting-configs
            - name: SENSE_CLIENT_URI
              valueFrom:
                configMapKeyRef:
                  key: senseClientUri
                  name: reporting-configs
            - name: SPACES_URI
              valueFrom:
                configMapKeyRef:
                  key: spacesUri
                  name: reporting-configs
            - name: TEMPORARY_CONTENTS_URI
              valueFrom:
                configMapKeyRef:
                  key: temporaryContentsUri
                  name: reporting-configs
            - name: TENANTS_URI
              valueFrom:
                configMapKeyRef:
                  key: tenantsUri
                  name: reporting-configs
            - name: USERS_URI
              valueFrom:
                configMapKeyRef:
                  key: usersUri
                  name: reporting-configs
            - name: PROXY_METRICS_PORT
              value: "8484"
            - name: PROXY_PORT
              value: "8001"
            - name: JAEGER_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTLP_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: HTTP_PROXY
              valueFrom:
                configMapKeyRef:
                  key: httpProxy
                  name: qliksense-configs
            - name: HTTPS_PROXY
              valueFrom:
                configMapKeyRef:
                  key: httpsProxy
                  name: qliksense-configs
            - name: NO_PROXY
              valueFrom:
                configMapKeyRef:
                  key: noProxy
                  name: qliksense-configs
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  key: mongodbUri
                  name: qliksense-secrets
            - name: MONGODB_URI_FILE
              value: /run/secrets/qlik.com/qliksense/mongodbUri
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: redisPassword
                  name: qliksense-secrets
            - name: REDIS_PASSWORD_FILE
              value: /run/secrets/qlik.com/qliksense/redisPassword
          image: ghcr.io/qlik-download/reporting-proxy:2.6.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /health
              port: metric
          name: rpr
          ports:
            - containerPort: 8484
              name: metric
              protocol: TCP
            - containerPort: 8001
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: ca-certificates
            - mountPath: /run/secrets/qlik.com/qliksense
              name: qliksense-secrets
        - args:
            - -l=$(LOG_LEVEL)
            - -http-server-enable=true
            - -http-server-host=0.0.0.0
            - -http-server-port=9288
            - -temp-dir=/home/wuser/rwr/tmp
          env:
            - name: NATS_CLIENT_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: HTTP_HOST
              value: 0.0.0.0
            - name: HTTP_HOST_ENABLE
              value: "true"
            - name: HTTP_PORT
              value: "9288"
            - name: LOG_LEVEL
              value: INFO
            - name: JAEGER_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTLP_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: HTTP_PROXY
              valueFrom:
                configMapKeyRef:
                  key: httpProxy
                  name: qliksense-configs
            - name: HTTPS_PROXY
              valueFrom:
                configMapKeyRef:
                  key: httpsProxy
                  name: qliksense-configs
            - name: NO_PROXY
              valueFrom:
                configMapKeyRef:
                  key: noProxy
                  name: qliksense-configs
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  key: mongodbUri
                  name: qliksense-secrets
            - name: MONGODB_URI_FILE
              value: /run/secrets/qlik.com/qliksense/mongodbUri
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: redisPassword
                  name: qliksense-secrets
            - name: REDIS_PASSWORD_FILE
              value: /run/secrets/qlik.com/qliksense/redisPassword
          image: ghcr.io/qlik-download/reporting-web-renderer:2.35.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /health
              port: http
          name: rwr
          ports:
            - containerPort: 9288
              name: http
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 65200
            runAsNonRoot: true
            runAsUser: 65200
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /home/wuser/rwr
              name: rwr-home
            - mountPath: /tmp
              name: rwr-tmp
            - mountPath: /etc/ssl/certs
              name: ca-certificates
            - mountPath: /run/secrets/qlik.com/qliksense
              name: qliksense-secrets
        - args:
            - -l="$(LOG_LEVEL)"
          env:
            - name: NATS_CLIENT_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: REDIS_ACL_PASSWORD_FILE
              value: /run/secrets/qlik.com/reporting/redisAclPassword
            - name: TOKEN_AUTH_PRIVATE_KEY_FILE
              value: /run/secrets/qlik.com/reporting/tokenAuthPrivateKey
            - name: TOKEN_AUTH_PRIVATE_KEY_ID_FILE
              value: /run/secrets/qlik.com/reporting/tokenAuthPrivateKeyId
            - name: AWSS3_ACCESSKEY
              valueFrom:
                configMapKeyRef:
                  key: awss3Accesskey
                  name: reporting-configs
            - name: AWSS3_BUCKET
              valueFrom:
                configMapKeyRef:
                  key: awss3Bucket
                  name: reporting-configs
            - name: AWSS3_REGION
              valueFrom:
                configMapKeyRef:
                  key: awss3Region
                  name: reporting-configs
            - name: AWSS3_SECRETKEY
              valueFrom:
                configMapKeyRef:
                  key: awss3Secretkey
                  name: reporting-configs
            - name: AWSS3_URL
              valueFrom:
                configMapKeyRef:
                  key: awss3Url
                  name: reporting-configs
            - name: EDGE_AUTH_URI
              valueFrom:
                configMapKeyRef:
                  key: edgeAuthUri
                  name: reporting-configs
            - name: ENCRYPTION_URI
              valueFrom:
                configMapKeyRef:
                  key: encryptionUri
                  name: reporting-configs
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: logLevel
                  name: reporting-configs
            - name: REDIS_ACL_USER
              valueFrom:
                configMapKeyRef:
                  key: redisAclUser
                  name: reporting-configs
            - name: REDIS_URI
              valueFrom:
                configMapKeyRef:
                  key: redisUri
                  name: reporting-configs
            - name: HTTP_PORT
              value: "8384"
            - name: PORT
              value: "52052"
            - name: TOKEN_AUTH_ENABLED
              value: "true"
            - name: JAEGER_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTLP_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: HTTP_PROXY
              valueFrom:
                configMapKeyRef:
                  key: httpProxy
                  name: qliksense-configs
            - name: HTTPS_PROXY
              valueFrom:
                configMapKeyRef:
                  key: httpsProxy
                  name: qliksense-configs
            - name: NO_PROXY
              valueFrom:
                configMapKeyRef:
                  key: noProxy
                  name: qliksense-configs
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  key: mongodbUri
                  name: qliksense-secrets
            - name: MONGODB_URI_FILE
              value: /run/secrets/qlik.com/qliksense/mongodbUri
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: redisPassword
                  name: qliksense-secrets
            - name: REDIS_PASSWORD_FILE
              value: /run/secrets/qlik.com/qliksense/redisPassword
          image: ghcr.io/qlik-download/reporting-composer:3.17.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
          name: cmp
          ports:
            - containerPort: 8384
              name: http
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 10
          volumeMounts:
            - mountPath: /run/secrets/qlik.com/reporting
              name: reporting-secrets
              readOnly: true
            - mountPath: /etc/ssl/certs
              name: ca-certificates
            - mountPath: /run/secrets/qlik.com/qliksense
              name: qliksense-secrets
        - env:
            - name: NATS_CLIENT_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: REDIS_ACL_PASSWORD_FILE
              value: /run/secrets/qlik.com/reporting/redisAclPassword
            - name: TOKEN_AUTH_PRIVATE_KEY_FILE
              value: /run/secrets/qlik.com/reporting/tokenAuthPrivateKey
            - name: TOKEN_AUTH_PRIVATE_KEY_ID_FILE
              value: /run/secrets/qlik.com/reporting/tokenAuthPrivateKeyId
            - name: AWSS3_ACCESSKEY
              valueFrom:
                configMapKeyRef:
                  key: awss3Accesskey
                  name: reporting-configs
            - name: AWSS3_BUCKET
              valueFrom:
                configMapKeyRef:
                  key: awss3Bucket
                  name: reporting-configs
            - name: AWSS3_REGION
              valueFrom:
                configMapKeyRef:
                  key: awss3Region
                  name: reporting-configs
            - name: AWSS3_SECRETKEY
              valueFrom:
                configMapKeyRef:
                  key: awss3Secretkey
                  name: reporting-configs
            - name: AWSS3_URL
              valueFrom:
                configMapKeyRef:
                  key: awss3Url
                  name: reporting-configs
            - name: CONTENT_SIZE_THRESHOLD
              valueFrom:
                configMapKeyRef:
                  key: contentSizeThreshold
                  name: reporting-configs
            - name: CONTENT_STORAGE
              valueFrom:
                configMapKeyRef:
                  key: contentStorage
                  name: reporting-configs
            - name: DEFAULT_REPORT_DEADLINE
              valueFrom:
                configMapKeyRef:
                  key: defaultReportDeadline
                  name: reporting-configs
            - name: EDGE_AUTH_URI
              valueFrom:
                configMapKeyRef:
                  key: edgeAuthUri
                  name: reporting-configs
            - name: ENABLE_TRACING
              valueFrom:
                configMapKeyRef:
                  key: enableTracing
                  name: reporting-configs
            - name: ENCRYPTION_URI
              valueFrom:
                configMapKeyRef:
                  key: encryptionUri
                  name: reporting-configs
            - name: FEATURE_FLAGS_URI
              valueFrom:
                configMapKeyRef:
                  key: featureFlagsUri
                  name: reporting-configs
            - name: KEYS_URI
              valueFrom:
                configMapKeyRef:
                  key: keysUri
                  name: reporting-configs
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: logLevel
                  name: reporting-configs
            - name: MAX_REPORT_DEADLINE
              valueFrom:
                configMapKeyRef:
                  key: maxReportDeadline
                  name: reporting-configs
            - name: NATS_STREAMING_CLUSTER_ID
              valueFrom:
                configMapKeyRef:
                  key: natsStreamingClusterId
                  name: reporting-configs
            - name: NATS_URI
              valueFrom:
                configMapKeyRef:
                  key: natsUri
                  name: reporting-configs
            - name: PROXY_URI
              valueFrom:
                configMapKeyRef:
                  key: proxyUri
                  name: reporting-configs
            - name: QIX_SESSIONS_URI
              valueFrom:
                configMapKeyRef:
                  key: qixSessionsUri
                  name: reporting-configs
            - name: QUOTAS
              valueFrom:
                configMapKeyRef:
                  key: quotas
                  name: reporting-configs
            - name: REDIS_ACL_USER
              valueFrom:
                configMapKeyRef:
                  key: redisAclUser
                  name: reporting-configs
            - name: REDIS_URI
              valueFrom:
                configMapKeyRef:
                  key: redisUri
                  name: reporting-configs
            - name: REPORTING_TEMPLATES_URI
              valueFrom:
                configMapKeyRef:
                  key: reportingTemplatesUri
                  name: reporting-configs
            - name: TEMPORARY_CONTENTS_URI
              valueFrom:
                configMapKeyRef:
                  key: temporaryContentsUri
                  name: reporting-configs
            - name: AUTH_ENABLED
              value: "true"
            - name: AUTH_JWD_AUD
              value: qlik.api.internal
            - name: AUTH_JWT_ISS
              value: qlik.api.internal
            - name: NO_JWT_VALIDATION
              value: "false"
            - name: REDIS_ENCRYPTION
              value: "false"
            - name: RENDERER_QUERY_STRING
              value: ""
            - name: TOKEN_AUTH_ENABLED
              value: "true"
            - name: JAEGER_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTLP_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: HTTP_PROXY
              valueFrom:
                configMapKeyRef:
                  key: httpProxy
                  name: qliksense-configs
            - name: HTTPS_PROXY
              valueFrom:
                configMapKeyRef:
                  key: httpsProxy
                  name: qliksense-configs
            - name: NO_PROXY
              valueFrom:
                configMapKeyRef:
                  key: noProxy
                  name: qliksense-configs
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  key: mongodbUri
                  name: qliksense-secrets
            - name: MONGODB_URI_FILE
              value: /run/secrets/qlik.com/qliksense/mongodbUri
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: redisPassword
                  name: qliksense-secrets
            - name: REDIS_PASSWORD_FILE
              value: /run/secrets/qlik.com/qliksense/redisPassword
          image: ghcr.io/qlik-download/reporting-service:9.77.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 15
            timeoutSeconds: 5
          name: rep
          ports:
            - containerPort: 8282
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 15
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: /run/secrets/qlik.com/reporting
              name: reporting-secrets
              readOnly: true
            - mountPath: /qlik/reporting-files
              name: reporting
              readOnly: false
            - mountPath: /etc/ssl/certs
              name: ca-certificates
            - mountPath: /run/secrets/qlik.com/qliksense
              name: qliksense-secrets
      imagePullSecrets:
        - name: artifactory-docker-secret
      volumes:
        - name: reporting-secrets
          secret:
            defaultMode: 420
            secretName: reporting-secrets
        - name: reporting
          persistentVolumeClaim:
            claimName: reporting
        - emptyDir: {}
          name: rwr-home
        - emptyDir: {}
          name: rwr-tmp
        - name: ca-certificates
          persistentVolumeClaim:
            claimName: ca-certificates
        - name: qliksense-secrets
          secret:
            secretName: qliksense-secrets
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/auth-response-headers: Authorization
    nginx.ingress.kubernetes.io/auth-url: http://edge-auth.$(NAMESPACE).svc.cluster.local:8080/v1/auth
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite (?i)/api/v1/(.*) /v1/$1 break;
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 5m
  labels:
    app: reporting
    app.kubernetes.io/component: reporting
    app.kubernetes.io/instance: reporting
    app.kubernetes.io/name: reporting
    app.kubernetes.io/version: 9.77.0
    chart: reporting-9.77.0
    heritage: Helm
    release: reporting
  name: reporting
  namespace: default
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - backend:
              service:
                name: reporting
                port:
                  number: 8282
            path: /api/v1/reports
            pathType: ImplementationSpecific
