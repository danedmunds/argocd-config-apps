apiVersion: v1
data:
  accessControlsUri: http://reporting-access-controls:5080
  awss3Accesskey: admin
  awss3Bucket: qlik-reporting-bucket
  awss3Region: some-region
  awss3Secretkey: Qlik1234
  awss3Url: http://minio:9000/
  configmapName: reporting-configs
  contentSizeThreshold: "102400"
  contentStorage: s3
  customizationUri: http://reporting-customization:8080
  defaultReportDeadline: PT10M
  edgeAuthUri: http://edge-auth:8080
  enableGuardRail: "true"
  enableTracing: "false"
  encryptionUri: http://encryption:8080
  engineRestApiVersion: v1
  engineUri: http://engine:9076
  featureFlagsUri: http://feature-flags:8080
  guardRailRsynPeriod: 30m
  ingressAuthUrl: http://edge-auth.default.svc.cluster.local:8080/v1/auth
  keysUri: http://keys:8080
  licensesUri: http://reporting-licenses:9200
  localeUri: http://locale:8080
  logLevel: info
  mainWebContainerUri: http://reporting-main-web-container:3025
  maxReportDeadline: PT2H
  natsStreamingClusterId: messaging-nats-streaming-cluster
  natsUri: nats://messaging-nats-client:4222
  notesUri: http://reporting-notes-broker:8080
  proxyUri: http://127.0.0.1:8001
  qixSessionsUri: http://qix-sessions:8080
  quotas: '{"tenantSessionQuotas":[]}'
  redisAclUser: ""
  redisUri: redis-master:6379
  reportingTemplatesUri: http://reporting-templates:8080
  resourceLibraryUri: http://resource-library:21068
  senseClientUri: http://sense-client:9050
  spacesUri: http://reporting-spaces:6080
  temporaryContentsUri: http://temporary-contents:6080
  tenantsUri: http://reporting-tenants:8080
  usageTrackerUri: http://reporting-usage-tracker:8080
  usersUri: http://reporting-identities:8080
kind: ConfigMap
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
  labels:
    app: reporting
    app.kubernetes.io/component: reporting
    app.kubernetes.io/instance: reporting
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 9.88.0
    chart: reporting-9.88.0
    domain: reporting
    heritage: Helm
    release: qlik-default
  name: reporting-configs
  namespace: default
---
apiVersion: v1
data:
  redisAclPassword: cmVwb3J0aW5nLXJlZGlzLWFjbC1wYXNzd29yZC0yODEyNzQ=
  redisPassword: TkdrVXAwVkRKdGMzeGl5Qw==
  tokenAuthPrivateKey: PLACEHOLDER
  tokenAuthPrivateKeyId: N25IWjZyZnJ6emp4dWhxQnl1SXJMVFdnNEhuTnpnTU1RZFVSZ1VRS092Zw==
kind: Secret
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
  labels:
    app: reporting
    app.kubernetes.io/component: reporting
    app.kubernetes.io/instance: reporting
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 9.88.0
    chart: reporting-9.88.0
    domain: reporting
    heritage: Helm
    release: qlik-default
  name: reporting-secrets
  namespace: default
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
    prometheus.io/port: "8282"
    prometheus.io/scrape: "true"
  labels:
    app: reporting
    app.kubernetes.io/component: reporting
    app.kubernetes.io/instance: reporting
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 9.88.0
    chart: reporting-9.88.0
    domain: reporting
    heritage: Helm
    release: qlik-default
  name: reporting
  namespace: default
spec:
  ports:
  - name: reporting
    port: 8282
    targetPort: 8282
  selector:
    app: reporting
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    release: qlik-default
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
    prometheus.io/port: "8383"
    prometheus.io/scrape: "true"
  labels:
    app: reporting
    app.kubernetes.io/component: reporting
    app.kubernetes.io/instance: reporting
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 9.88.0
    chart: reporting-9.88.0
    domain: reporting
    heritage: Helm
    release: qlik-default
  name: reporting-cmp
  namespace: default
spec:
  ports:
  - name: reporting-cmp
    port: 8383
    targetPort: 8383
  selector:
    app: reporting
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    release: qlik-default
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
    prometheus.io/port: "8484"
    prometheus.io/scrape: "true"
  labels:
    app: reporting
    app.kubernetes.io/component: reporting
    app.kubernetes.io/instance: reporting
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 9.88.0
    chart: reporting-9.88.0
    domain: reporting
    heritage: Helm
    release: qlik-default
  name: reporting-rpr
  namespace: default
spec:
  ports:
  - name: reporting-rpr
    port: 8484
    targetPort: 8484
  selector:
    app: reporting
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    release: qlik-default
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
  labels:
    app: reporting
    app.kubernetes.io/component: reporting
    app.kubernetes.io/instance: reporting
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 9.88.0
    chart: reporting-9.88.0
    domain: reporting
    heritage: Helm
    release: qlik-default
  name: reporting-rwr
  namespace: default
spec:
  ports:
  - name: reporting-rwr
    port: 9288
    targetPort: 9288
  selector:
    app: reporting
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    release: qlik-default
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
  labels:
    app: reporting
    app.kubernetes.io/component: reporting
    app.kubernetes.io/instance: reporting
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 9.88.0
    chart: reporting-9.88.0
    domain: reporting
    heritage: Helm
    release: qlik-default
  name: reporting
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-storage
  volumeName: reporting
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
  labels:
    app: reporting
    app.kubernetes.io/component: reporting
    app.kubernetes.io/instance: reporting
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 9.88.0
    chart: reporting-9.88.0
    domain: reporting
    heritage: Helm
    release: qlik-default
  name: reporting
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reporting
      app.kubernetes.io/name: qliksense
      app.kubernetes.io/part-of: qliksense
      release: qlik-default
  template:
    metadata:
      annotations:
        app.kubernetes.io/name: reporting
        checksum/configs: d2fc87af291e83d1276adb15cb797fb8653267c078474d14dac5c338bbecc7d6
        checksum/secrets: c4b91f7b9b5b4af6712fa5f9107b132a6944817387009c7edddc3ba9fa8188e2
      labels:
        app: reporting
        app.kubernetes.io/name: qliksense
        app.kubernetes.io/part-of: qliksense
        domain: reporting
        messaging-nats-client: "true"
        release: qlik-default
    spec:
      containers:
      - env:
        - name: NATS_CLIENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CUSTOMIZATION_URI
          valueFrom:
            configMapKeyRef:
              key: customizationUri
              name: reporting-configs
        - name: EDGE_AUTH_URI
          valueFrom:
            configMapKeyRef:
              key: edgeAuthUri
              name: reporting-configs
        - name: ENGINE_REST_API_VERSION
          valueFrom:
            configMapKeyRef:
              key: engineRestApiVersion
              name: reporting-configs
        - name: ENGINE_URI
          valueFrom:
            configMapKeyRef:
              key: engineUri
              name: reporting-configs
        - name: FEATURE_FLAGS_URI
          valueFrom:
            configMapKeyRef:
              key: featureFlagsUri
              name: reporting-configs
        - name: LICENSES_URI
          valueFrom:
            configMapKeyRef:
              key: licensesUri
              name: reporting-configs
        - name: LOCALE_URI
          valueFrom:
            configMapKeyRef:
              key: localeUri
              name: reporting-configs
        - name: MAIN_WEB_CONTAINER_URI
          valueFrom:
            configMapKeyRef:
              key: mainWebContainerUri
              name: reporting-configs
        - name: NOTES_URI
          valueFrom:
            configMapKeyRef:
              key: notesUri
              name: reporting-configs
        - name: PROXY_URI
          valueFrom:
            configMapKeyRef:
              key: proxyUri
              name: reporting-configs
        - name: RESOURCE_LIBRARY_URI
          valueFrom:
            configMapKeyRef:
              key: resourceLibraryUri
              name: reporting-configs
        - name: SENSE_CLIENT_URI
          valueFrom:
            configMapKeyRef:
              key: senseClientUri
              name: reporting-configs
        - name: SPACES_URI
          valueFrom:
            configMapKeyRef:
              key: spacesUri
              name: reporting-configs
        - name: TEMPORARY_CONTENTS_URI
          valueFrom:
            configMapKeyRef:
              key: temporaryContentsUri
              name: reporting-configs
        - name: TENANTS_URI
          valueFrom:
            configMapKeyRef:
              key: tenantsUri
              name: reporting-configs
        - name: USERS_URI
          valueFrom:
            configMapKeyRef:
              key: usersUri
              name: reporting-configs
        - name: PROXY_METRICS_PORT
          value: "8484"
        - name: PROXY_PORT
          value: "8001"
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: OTLP_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: HTTP_PROXY
          valueFrom:
            configMapKeyRef:
              key: httpProxy
              name: qliksense-configs
        - name: HTTPS_PROXY
          valueFrom:
            configMapKeyRef:
              key: httpsProxy
              name: qliksense-configs
        - name: NO_PROXY
          valueFrom:
            configMapKeyRef:
              key: noProxy
              name: qliksense-configs
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              key: mongodbUri
              name: qliksense-secrets
        - name: MONGODB_URI_FILE
          value: /run/secrets/qlik.com/qliksense/mongodbUri
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redisPassword
              name: qliksense-secrets
        - name: REDIS_PASSWORD_FILE
          value: /run/secrets/qlik.com/qliksense/redisPassword
        - name: REDIS_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              key: redisEncryptionKey
              name: qliksense-secrets
        - name: REDIS_ENCRYPTION_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/redisEncryptionKey
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              key: minioRootUser
              name: qliksense-secrets
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: minioRootPassword
              name: qliksense-secrets
        - name: FORT_ID
          valueFrom:
            configMapKeyRef:
              key: fortId
              name: qliksense-configs
        - name: FORT_IOT_CERTIFICATE_ID
          valueFrom:
            configMapKeyRef:
              key: fortIotCertificateId
              name: qliksense-configs
        - name: FORT_IOT_THING_NAME
          valueFrom:
            configMapKeyRef:
              key: fortressId
              name: qliksense-configs
        - name: FORT_NAME
          valueFrom:
            configMapKeyRef:
              key: fortName
              name: qliksense-configs
        - name: FORT_ORIGIN_URL
          valueFrom:
            configMapKeyRef:
              key: fortOriginUrl
              name: qliksense-configs
        - name: FORT_TENANT_URL
          valueFrom:
            configMapKeyRef:
              key: fortTenantUrl
              name: qliksense-configs
        - name: FORTRESS_IOT_THING_ROLE_ALIAS_NAME
          valueFrom:
            configMapKeyRef:
              key: iotThingRoleAliasName
              name: qliksense-configs
        - name: FORTRESS_ID
          valueFrom:
            configMapKeyRef:
              key: fortressId
              name: qliksense-configs
        - name: FORTRESS_DEVICE_CREDENTIAL_ENDPOINT
          valueFrom:
            configMapKeyRef:
              key: iotCredentialUrl
              name: qliksense-configs
        - name: FORTRESS_IOT_CREDENTIAL_ENDPOINT
          value: https://$(FORTRESS_DEVICE_CREDENTIAL_ENDPOINT)
        - name: FORTRESS_REGION
          valueFrom:
            configMapKeyRef:
              key: iotAwsRegion
              name: qliksense-configs
        - name: FORTRESS_THING_CA_FILE
          value: /run/secrets/qlik.com/qliksense/iotRootCa
        - name: FORTRESS_THING_CERT_FILE
          value: /run/secrets/qlik.com/qliksense/iotFortThingCert
        - name: FORTRESS_THING_DATA_ENDPOINT
          valueFrom:
            configMapKeyRef:
              key: fortressThingDataEndpoint
              name: qliksense-configs
        - name: FORTRESS_THING_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotFortThingPrivateKey
        - name: FORTRESS_THING_NAME
          valueFrom:
            configMapKeyRef:
              key: thingName
              name: qliksense-configs
        - name: FORT_WEB_INTEGRATION_ID
          valueFrom:
            configMapKeyRef:
              key: fortWebIntegrationId
              name: qliksense-configs
        - name: FORT_TENANT_ID
          valueFrom:
            configMapKeyRef:
              key: tenantId
              name: qliksense-configs
        - name: FORT_PRIVATE_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotThingPrivateKey
        - name: FORT_IOT_PRIVATE_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotThingPrivateKey
        - name: JAEGER_DISABLED
          value: "true"
        - name: DISABLE_OTLP
          value: "true"
        - name: AWSS3_SECRETKEY
          value: $(MINIO_ROOT_PASSWORD)
        - name: AWSS3_ACCESSKEY
          value: $(MINIO_ROOT_USER)
        image: ghcr.io/qlik-download/reporting-proxy:2.8.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: metric
        name: rpr
        ports:
        - containerPort: 8484
          name: metric
          protocol: TCP
        - containerPort: 8001
        readinessProbe:
          httpGet:
            path: /ready
            port: metric
        volumeMounts:
        - mountPath: /etc/ssl/certs
          name: ca-certificates
        - mountPath: /run/secrets/qlik.com/qliksense
          name: qliksense-secrets
          readOnly: true
      - args:
        - -l=$(LOG_LEVEL)
        - -http-server-enable=true
        - -http-server-host=0.0.0.0
        - -http-server-port=9288
        - -temp-dir=/home/wuser/rwr/tmp
        env:
        - name: NATS_CLIENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: HTTP_HOST
          value: 0.0.0.0
        - name: HTTP_HOST_ENABLE
          value: "true"
        - name: HTTP_PORT
          value: "9288"
        - name: LOG_LEVEL
          value: INFO
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: OTLP_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: HTTP_PROXY
          valueFrom:
            configMapKeyRef:
              key: httpProxy
              name: qliksense-configs
        - name: HTTPS_PROXY
          valueFrom:
            configMapKeyRef:
              key: httpsProxy
              name: qliksense-configs
        - name: NO_PROXY
          valueFrom:
            configMapKeyRef:
              key: noProxy
              name: qliksense-configs
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              key: mongodbUri
              name: qliksense-secrets
        - name: MONGODB_URI_FILE
          value: /run/secrets/qlik.com/qliksense/mongodbUri
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redisPassword
              name: qliksense-secrets
        - name: REDIS_PASSWORD_FILE
          value: /run/secrets/qlik.com/qliksense/redisPassword
        - name: REDIS_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              key: redisEncryptionKey
              name: qliksense-secrets
        - name: REDIS_ENCRYPTION_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/redisEncryptionKey
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              key: minioRootUser
              name: qliksense-secrets
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: minioRootPassword
              name: qliksense-secrets
        - name: FORT_ID
          valueFrom:
            configMapKeyRef:
              key: fortId
              name: qliksense-configs
        - name: FORT_IOT_CERTIFICATE_ID
          valueFrom:
            configMapKeyRef:
              key: fortIotCertificateId
              name: qliksense-configs
        - name: FORT_IOT_THING_NAME
          valueFrom:
            configMapKeyRef:
              key: fortressId
              name: qliksense-configs
        - name: FORT_NAME
          valueFrom:
            configMapKeyRef:
              key: fortName
              name: qliksense-configs
        - name: FORT_ORIGIN_URL
          valueFrom:
            configMapKeyRef:
              key: fortOriginUrl
              name: qliksense-configs
        - name: FORT_TENANT_URL
          valueFrom:
            configMapKeyRef:
              key: fortTenantUrl
              name: qliksense-configs
        - name: FORTRESS_IOT_THING_ROLE_ALIAS_NAME
          valueFrom:
            configMapKeyRef:
              key: iotThingRoleAliasName
              name: qliksense-configs
        - name: FORTRESS_ID
          valueFrom:
            configMapKeyRef:
              key: fortressId
              name: qliksense-configs
        - name: FORTRESS_DEVICE_CREDENTIAL_ENDPOINT
          valueFrom:
            configMapKeyRef:
              key: iotCredentialUrl
              name: qliksense-configs
        - name: FORTRESS_IOT_CREDENTIAL_ENDPOINT
          value: https://$(FORTRESS_DEVICE_CREDENTIAL_ENDPOINT)
        - name: FORTRESS_REGION
          valueFrom:
            configMapKeyRef:
              key: iotAwsRegion
              name: qliksense-configs
        - name: FORTRESS_THING_CA_FILE
          value: /run/secrets/qlik.com/qliksense/iotRootCa
        - name: FORTRESS_THING_CERT_FILE
          value: /run/secrets/qlik.com/qliksense/iotFortThingCert
        - name: FORTRESS_THING_DATA_ENDPOINT
          valueFrom:
            configMapKeyRef:
              key: fortressThingDataEndpoint
              name: qliksense-configs
        - name: FORTRESS_THING_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotFortThingPrivateKey
        - name: FORTRESS_THING_NAME
          valueFrom:
            configMapKeyRef:
              key: thingName
              name: qliksense-configs
        - name: FORT_WEB_INTEGRATION_ID
          valueFrom:
            configMapKeyRef:
              key: fortWebIntegrationId
              name: qliksense-configs
        - name: FORT_TENANT_ID
          valueFrom:
            configMapKeyRef:
              key: tenantId
              name: qliksense-configs
        - name: FORT_PRIVATE_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotThingPrivateKey
        - name: FORT_IOT_PRIVATE_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotThingPrivateKey
        - name: JAEGER_DISABLED
          value: "true"
        - name: DISABLE_OTLP
          value: "true"
        - name: AWSS3_SECRETKEY
          value: $(MINIO_ROOT_PASSWORD)
        - name: AWSS3_ACCESSKEY
          value: $(MINIO_ROOT_USER)
        image: ghcr.io/qlik-download/reporting-web-renderer:2.38.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: http
        name: rwr
        ports:
        - containerPort: 9288
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 65200
          runAsNonRoot: true
          runAsUser: 65200
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /home/wuser/rwr
          name: rwr-home
        - mountPath: /tmp
          name: rwr-tmp
        - mountPath: /etc/ssl/certs
          name: ca-certificates
        - mountPath: /run/secrets/qlik.com/qliksense
          name: qliksense-secrets
          readOnly: true
      - args:
        - -l="$(LOG_LEVEL)"
        env:
        - name: NATS_CLIENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: REDIS_ACL_PASSWORD_FILE
          value: /run/secrets/qlik.com/reporting/redisAclPassword
        - name: TOKEN_AUTH_PRIVATE_KEY_FILE
          value: /run/secrets/qlik.com/reporting/tokenAuthPrivateKey
        - name: TOKEN_AUTH_PRIVATE_KEY_ID_FILE
          value: /run/secrets/qlik.com/reporting/tokenAuthPrivateKeyId
        - name: AWSS3_BUCKET
          valueFrom:
            configMapKeyRef:
              key: awss3Bucket
              name: reporting-configs
        - name: AWSS3_REGION
          valueFrom:
            configMapKeyRef:
              key: awss3Region
              name: reporting-configs
        - name: AWSS3_URL
          valueFrom:
            configMapKeyRef:
              key: awss3Url
              name: reporting-configs
        - name: EDGE_AUTH_URI
          valueFrom:
            configMapKeyRef:
              key: edgeAuthUri
              name: reporting-configs
        - name: ENCRYPTION_URI
          valueFrom:
            configMapKeyRef:
              key: encryptionUri
              name: reporting-configs
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              key: logLevel
              name: reporting-configs
        - name: REDIS_ACL_USER
          valueFrom:
            configMapKeyRef:
              key: redisAclUser
              name: reporting-configs
        - name: REDIS_URI
          valueFrom:
            configMapKeyRef:
              key: redisUri
              name: reporting-configs
        - name: HTTP_PORT
          value: "8384"
        - name: PORT
          value: "52052"
        - name: TOKEN_AUTH_ENABLED
          value: "true"
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: OTLP_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: HTTP_PROXY
          valueFrom:
            configMapKeyRef:
              key: httpProxy
              name: qliksense-configs
        - name: HTTPS_PROXY
          valueFrom:
            configMapKeyRef:
              key: httpsProxy
              name: qliksense-configs
        - name: NO_PROXY
          valueFrom:
            configMapKeyRef:
              key: noProxy
              name: qliksense-configs
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              key: mongodbUri
              name: qliksense-secrets
        - name: MONGODB_URI_FILE
          value: /run/secrets/qlik.com/qliksense/mongodbUri
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redisPassword
              name: qliksense-secrets
        - name: REDIS_PASSWORD_FILE
          value: /run/secrets/qlik.com/qliksense/redisPassword
        - name: REDIS_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              key: redisEncryptionKey
              name: qliksense-secrets
        - name: REDIS_ENCRYPTION_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/redisEncryptionKey
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              key: minioRootUser
              name: qliksense-secrets
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: minioRootPassword
              name: qliksense-secrets
        - name: FORT_ID
          valueFrom:
            configMapKeyRef:
              key: fortId
              name: qliksense-configs
        - name: FORT_IOT_CERTIFICATE_ID
          valueFrom:
            configMapKeyRef:
              key: fortIotCertificateId
              name: qliksense-configs
        - name: FORT_IOT_THING_NAME
          valueFrom:
            configMapKeyRef:
              key: fortressId
              name: qliksense-configs
        - name: FORT_NAME
          valueFrom:
            configMapKeyRef:
              key: fortName
              name: qliksense-configs
        - name: FORT_ORIGIN_URL
          valueFrom:
            configMapKeyRef:
              key: fortOriginUrl
              name: qliksense-configs
        - name: FORT_TENANT_URL
          valueFrom:
            configMapKeyRef:
              key: fortTenantUrl
              name: qliksense-configs
        - name: FORTRESS_IOT_THING_ROLE_ALIAS_NAME
          valueFrom:
            configMapKeyRef:
              key: iotThingRoleAliasName
              name: qliksense-configs
        - name: FORTRESS_ID
          valueFrom:
            configMapKeyRef:
              key: fortressId
              name: qliksense-configs
        - name: FORTRESS_DEVICE_CREDENTIAL_ENDPOINT
          valueFrom:
            configMapKeyRef:
              key: iotCredentialUrl
              name: qliksense-configs
        - name: FORTRESS_IOT_CREDENTIAL_ENDPOINT
          value: https://$(FORTRESS_DEVICE_CREDENTIAL_ENDPOINT)
        - name: FORTRESS_REGION
          valueFrom:
            configMapKeyRef:
              key: iotAwsRegion
              name: qliksense-configs
        - name: FORTRESS_THING_CA_FILE
          value: /run/secrets/qlik.com/qliksense/iotRootCa
        - name: FORTRESS_THING_CERT_FILE
          value: /run/secrets/qlik.com/qliksense/iotFortThingCert
        - name: FORTRESS_THING_DATA_ENDPOINT
          valueFrom:
            configMapKeyRef:
              key: fortressThingDataEndpoint
              name: qliksense-configs
        - name: FORTRESS_THING_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotFortThingPrivateKey
        - name: FORTRESS_THING_NAME
          valueFrom:
            configMapKeyRef:
              key: thingName
              name: qliksense-configs
        - name: FORT_WEB_INTEGRATION_ID
          valueFrom:
            configMapKeyRef:
              key: fortWebIntegrationId
              name: qliksense-configs
        - name: FORT_TENANT_ID
          valueFrom:
            configMapKeyRef:
              key: tenantId
              name: qliksense-configs
        - name: FORT_PRIVATE_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotThingPrivateKey
        - name: FORT_IOT_PRIVATE_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotThingPrivateKey
        - name: JAEGER_DISABLED
          value: "true"
        - name: DISABLE_OTLP
          value: "true"
        - name: AWSS3_SECRETKEY
          value: $(MINIO_ROOT_PASSWORD)
        - name: AWSS3_ACCESSKEY
          value: $(MINIO_ROOT_USER)
        image: ghcr.io/qlik-download/reporting-composer:3.17.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
        name: cmp
        ports:
        - containerPort: 8384
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 10
        volumeMounts:
        - mountPath: /run/secrets/qlik.com/reporting
          name: reporting-secrets
          readOnly: true
        - mountPath: /etc/ssl/certs
          name: ca-certificates
        - mountPath: /run/secrets/qlik.com/qliksense
          name: qliksense-secrets
          readOnly: true
      - env:
        - name: NATS_CLIENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: REDIS_ACL_PASSWORD_FILE
          value: /run/secrets/qlik.com/reporting/redisAclPassword
        - name: TOKEN_AUTH_PRIVATE_KEY_FILE
          value: /run/secrets/qlik.com/reporting/tokenAuthPrivateKey
        - name: TOKEN_AUTH_PRIVATE_KEY_ID_FILE
          value: /run/secrets/qlik.com/reporting/tokenAuthPrivateKeyId
        - name: ACCESS_CONTROLS_URI
          valueFrom:
            configMapKeyRef:
              key: accessControlsUri
              name: reporting-configs
        - name: AWSS3_BUCKET
          valueFrom:
            configMapKeyRef:
              key: awss3Bucket
              name: reporting-configs
        - name: AWSS3_REGION
          valueFrom:
            configMapKeyRef:
              key: awss3Region
              name: reporting-configs
        - name: AWSS3_URL
          valueFrom:
            configMapKeyRef:
              key: awss3Url
              name: reporting-configs
        - name: CONTENT_SIZE_THRESHOLD
          valueFrom:
            configMapKeyRef:
              key: contentSizeThreshold
              name: reporting-configs
        - name: CONTENT_STORAGE
          valueFrom:
            configMapKeyRef:
              key: contentStorage
              name: reporting-configs
        - name: DEFAULT_REPORT_DEADLINE
          valueFrom:
            configMapKeyRef:
              key: defaultReportDeadline
              name: reporting-configs
        - name: EDGE_AUTH_URI
          valueFrom:
            configMapKeyRef:
              key: edgeAuthUri
              name: reporting-configs
        - name: ENABLE_GUARD_RAIL
          valueFrom:
            configMapKeyRef:
              key: enableGuardRail
              name: reporting-configs
        - name: ENABLE_TRACING
          valueFrom:
            configMapKeyRef:
              key: enableTracing
              name: reporting-configs
        - name: ENCRYPTION_URI
          valueFrom:
            configMapKeyRef:
              key: encryptionUri
              name: reporting-configs
        - name: FEATURE_FLAGS_URI
          valueFrom:
            configMapKeyRef:
              key: featureFlagsUri
              name: reporting-configs
        - name: GUARD_RAIL_RSYN_PERIOD
          valueFrom:
            configMapKeyRef:
              key: guardRailRsynPeriod
              name: reporting-configs
        - name: KEYS_URI
          valueFrom:
            configMapKeyRef:
              key: keysUri
              name: reporting-configs
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              key: logLevel
              name: reporting-configs
        - name: MAX_REPORT_DEADLINE
          valueFrom:
            configMapKeyRef:
              key: maxReportDeadline
              name: reporting-configs
        - name: NATS_STREAMING_CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: natsStreamingClusterId
              name: reporting-configs
        - name: NATS_URI
          valueFrom:
            configMapKeyRef:
              key: natsUri
              name: reporting-configs
        - name: PROXY_URI
          valueFrom:
            configMapKeyRef:
              key: proxyUri
              name: reporting-configs
        - name: QIX_SESSIONS_URI
          valueFrom:
            configMapKeyRef:
              key: qixSessionsUri
              name: reporting-configs
        - name: QUOTAS
          valueFrom:
            configMapKeyRef:
              key: quotas
              name: reporting-configs
        - name: REDIS_ACL_USER
          valueFrom:
            configMapKeyRef:
              key: redisAclUser
              name: reporting-configs
        - name: REDIS_URI
          valueFrom:
            configMapKeyRef:
              key: redisUri
              name: reporting-configs
        - name: REPORTING_TEMPLATES_URI
          valueFrom:
            configMapKeyRef:
              key: reportingTemplatesUri
              name: reporting-configs
        - name: TEMPORARY_CONTENTS_URI
          valueFrom:
            configMapKeyRef:
              key: temporaryContentsUri
              name: reporting-configs
        - name: USAGE_TRACKER_URI
          valueFrom:
            configMapKeyRef:
              key: usageTrackerUri
              name: reporting-configs
        - name: AUTH_ENABLED
          value: "true"
        - name: AUTH_JWD_AUD
          value: qlik.api.internal
        - name: AUTH_JWT_ISS
          value: qlik.api.internal
        - name: NO_JWT_VALIDATION
          value: "false"
        - name: REDIS_ENCRYPTION
          value: "false"
        - name: RENDERER_QUERY_STRING
          value: ""
        - name: TOKEN_AUTH_ENABLED
          value: "true"
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: OTLP_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: HTTP_PROXY
          valueFrom:
            configMapKeyRef:
              key: httpProxy
              name: qliksense-configs
        - name: HTTPS_PROXY
          valueFrom:
            configMapKeyRef:
              key: httpsProxy
              name: qliksense-configs
        - name: NO_PROXY
          valueFrom:
            configMapKeyRef:
              key: noProxy
              name: qliksense-configs
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              key: mongodbUri
              name: qliksense-secrets
        - name: MONGODB_URI_FILE
          value: /run/secrets/qlik.com/qliksense/mongodbUri
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redisPassword
              name: qliksense-secrets
        - name: REDIS_PASSWORD_FILE
          value: /run/secrets/qlik.com/qliksense/redisPassword
        - name: REDIS_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              key: redisEncryptionKey
              name: qliksense-secrets
        - name: REDIS_ENCRYPTION_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/redisEncryptionKey
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              key: minioRootUser
              name: qliksense-secrets
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: minioRootPassword
              name: qliksense-secrets
        - name: FORT_ID
          valueFrom:
            configMapKeyRef:
              key: fortId
              name: qliksense-configs
        - name: FORT_IOT_CERTIFICATE_ID
          valueFrom:
            configMapKeyRef:
              key: fortIotCertificateId
              name: qliksense-configs
        - name: FORT_IOT_THING_NAME
          valueFrom:
            configMapKeyRef:
              key: fortressId
              name: qliksense-configs
        - name: FORT_NAME
          valueFrom:
            configMapKeyRef:
              key: fortName
              name: qliksense-configs
        - name: FORT_ORIGIN_URL
          valueFrom:
            configMapKeyRef:
              key: fortOriginUrl
              name: qliksense-configs
        - name: FORT_TENANT_URL
          valueFrom:
            configMapKeyRef:
              key: fortTenantUrl
              name: qliksense-configs
        - name: FORTRESS_IOT_THING_ROLE_ALIAS_NAME
          valueFrom:
            configMapKeyRef:
              key: iotThingRoleAliasName
              name: qliksense-configs
        - name: FORTRESS_ID
          valueFrom:
            configMapKeyRef:
              key: fortressId
              name: qliksense-configs
        - name: FORTRESS_DEVICE_CREDENTIAL_ENDPOINT
          valueFrom:
            configMapKeyRef:
              key: iotCredentialUrl
              name: qliksense-configs
        - name: FORTRESS_IOT_CREDENTIAL_ENDPOINT
          value: https://$(FORTRESS_DEVICE_CREDENTIAL_ENDPOINT)
        - name: FORTRESS_REGION
          valueFrom:
            configMapKeyRef:
              key: iotAwsRegion
              name: qliksense-configs
        - name: FORTRESS_THING_CA_FILE
          value: /run/secrets/qlik.com/qliksense/iotRootCa
        - name: FORTRESS_THING_CERT_FILE
          value: /run/secrets/qlik.com/qliksense/iotFortThingCert
        - name: FORTRESS_THING_DATA_ENDPOINT
          valueFrom:
            configMapKeyRef:
              key: fortressThingDataEndpoint
              name: qliksense-configs
        - name: FORTRESS_THING_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotFortThingPrivateKey
        - name: FORTRESS_THING_NAME
          valueFrom:
            configMapKeyRef:
              key: thingName
              name: qliksense-configs
        - name: FORT_WEB_INTEGRATION_ID
          valueFrom:
            configMapKeyRef:
              key: fortWebIntegrationId
              name: qliksense-configs
        - name: FORT_TENANT_ID
          valueFrom:
            configMapKeyRef:
              key: tenantId
              name: qliksense-configs
        - name: FORT_PRIVATE_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotThingPrivateKey
        - name: FORT_IOT_PRIVATE_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotThingPrivateKey
        - name: JAEGER_DISABLED
          value: "true"
        - name: DISABLE_OTLP
          value: "true"
        - name: AWSS3_SECRETKEY
          value: $(MINIO_ROOT_PASSWORD)
        - name: AWSS3_ACCESSKEY
          value: $(MINIO_ROOT_USER)
        image: ghcr.io/qlik-download/reporting-service:9.88.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          timeoutSeconds: 5
        name: rep
        ports:
        - containerPort: 8282
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 15
          timeoutSeconds: 5
        volumeMounts:
        - mountPath: /run/secrets/qlik.com/reporting
          name: reporting-secrets
          readOnly: true
        - mountPath: /qlik/reporting-files
          name: reporting
          readOnly: false
        - mountPath: /etc/ssl/certs
          name: ca-certificates
        - mountPath: /run/secrets/qlik.com/qliksense
          name: qliksense-secrets
          readOnly: true
      imagePullSecrets:
      - name: artifactory-docker-secret
      volumes:
      - name: reporting-secrets
        secret:
          defaultMode: 420
          secretName: reporting-secrets
      - name: reporting
        persistentVolumeClaim:
          claimName: reporting
      - emptyDir: {}
        name: rwr-home
      - emptyDir: {}
        name: rwr-tmp
      - name: ca-certificates
        persistentVolumeClaim:
          claimName: ca-certificates
      - name: qliksense-secrets
        secret:
          secretName: qliksense-secrets
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
    nginx.ingress.kubernetes.io/auth-response-headers: Authorization
    nginx.ingress.kubernetes.io/auth-url: http://edge-auth.default.svc.cluster.local:8080/v1/auth
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite (?i)/api/v1/(.*) /v1/$1 break;
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 5m
  labels:
    app: reporting
    app.kubernetes.io/component: reporting
    app.kubernetes.io/instance: reporting
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 9.88.0
    chart: reporting-9.88.0
    domain: reporting
    heritage: Helm
    release: qlik-default
  name: reporting
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - backend:
          service:
            name: reporting
            port:
              number: 8282
        path: /api/v1/reports
        pathType: ImplementationSpecific
