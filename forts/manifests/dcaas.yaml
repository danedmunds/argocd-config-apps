apiVersion: v1
data:
  connectorService: data-connector-common:50095 data-connector-rest-rld:data-connector-rest-cmd:50060
    data-connector-qwc-rld:data-connector-qwc-cmd:50060 data-connector-odbc-rld:data-connector-odbc-cmd:50060
    data-connector-sap-sql-rld:data-connector-sap-sql-cmd:50060 data-connector-sap-bw-rld:data-connector-sap-bw-cmd:50060
    qix-datafiles:50051 data-connector-sfdc-rld:data-connector-sfdc-cmd:50060 data-connector-nfs:50051
  connectorsConfig: '{"connectors":[]}'
  dataConnectionsUri: http://data-connections:9011
  featureFlagsUri: http://feature-flags:8080
  ingressAuthUrl: http://edge-auth.$(NAMESPACE).svc.cluster.local:8080/v1/auth
  keysUri: http://keys:8080
  logLevel: info
  natsStreamingClusterId: dcaas-nats-streaming-cluster
  natsUri: nats://dcaas-nats-client:4222
  qixDataConnectionUri: http://dcaas-qix-data-connection:9011
  redisUri: redis-master:6379
  spacesUri: http://spaces:6080
kind: ConfigMap
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
  labels:
    app: dcaas
    app.kubernetes.io/component: dcaas
    app.kubernetes.io/instance: dcaas
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 5.4.0
    chart: dcaas-5.4.0
    domain: data-connectors
    heritage: Helm
    release: qlik-default
  name: dcaas-configs
  namespace: default
---
apiVersion: v1
data:
  redisEncryptionKey: TkdrVXAwVkRKdGMzeGl5Qw==
  tokenAuthPrivateKey: PLACEHOLDER
  tokenAuthPrivateKeyId: eGNPbWE1SlVMdzVnNzgwYW95YWNEWWtFVVZKZFdMSGdDZzJlbnotQWhaQQ==
kind: Secret
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
  labels:
    app: dcaas
    app.kubernetes.io/component: dcaas
    app.kubernetes.io/instance: dcaas
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 5.4.0
    chart: dcaas-5.4.0
    domain: data-connectors
    heritage: Helm
    release: qlik-default
  name: dcaas-secrets
  namespace: default
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
    prometheus.io/port: "9026"
    prometheus.io/scrape: "true"
  labels:
    app: dcaas
    app.kubernetes.io/component: dcaas
    app.kubernetes.io/instance: dcaas
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 5.4.0
    chart: dcaas-5.4.0
    domain: data-connectors
    heritage: Helm
    release: qlik-default
  name: dcaas
  namespace: default
spec:
  ports:
  - name: http
    port: 9026
    protocol: TCP
    targetPort: 9026
  selector:
    app: dcaas
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    release: qlik-default
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
  labels:
    app: dcaas
    app.kubernetes.io/component: dcaas
    app.kubernetes.io/instance: dcaas
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 5.4.0
    chart: dcaas-5.4.0
    domain: data-connectors
    heritage: Helm
    release: qlik-default
  name: dcaas
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dcaas
      app.kubernetes.io/name: qliksense
      app.kubernetes.io/part-of: qliksense
      release: qlik-default
  template:
    metadata:
      annotations:
        app.kubernetes.io/name: dcaas
        checksum/configs: 00642e153f0a2ebe14de5016b3f5cb8198b1cd73dd460bdb37fb8c68e665fa96
        checksum/secrets: 7323d323211f005f7c8485fdc36c99abea5ab41818b133a566c4ae6847d32eae
      labels:
        app: dcaas
        app.kubernetes.io/name: qliksense
        app.kubernetes.io/part-of: qliksense
        dcaas-nats-client: "true"
        domain: data-connectors
        release: qlik-default
    spec:
      containers:
      - env:
        - name: NATS_CLIENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: TOKEN_AUTH_PRIVATE_KEY_FILE
          value: /run/secrets/qlik.com/dcaas/tokenAuthPrivateKey
        - name: TOKEN_AUTH_PRIVATE_KEY_ID_FILE
          value: /run/secrets/qlik.com/dcaas/tokenAuthPrivateKeyId
        - name: CONNECTOR_SERVICE
          valueFrom:
            configMapKeyRef:
              key: connectorService
              name: dcaas-configs
        - name: CONNECTORS_CONFIG
          valueFrom:
            configMapKeyRef:
              key: connectorsConfig
              name: dcaas-configs
        - name: DATA_CONNECTIONS_URI
          valueFrom:
            configMapKeyRef:
              key: dataConnectionsUri
              name: dcaas-configs
        - name: FEATURE_FLAGS_URI
          valueFrom:
            configMapKeyRef:
              key: featureFlagsUri
              name: dcaas-configs
        - name: INGRESS_AUTH_URL
          valueFrom:
            configMapKeyRef:
              key: ingressAuthUrl
              name: dcaas-configs
        - name: KEYS_URI
          valueFrom:
            configMapKeyRef:
              key: keysUri
              name: dcaas-configs
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              key: logLevel
              name: dcaas-configs
        - name: NATS_STREAMING_CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: natsStreamingClusterId
              name: dcaas-configs
        - name: NATS_URI
          valueFrom:
            configMapKeyRef:
              key: natsUri
              name: dcaas-configs
        - name: QIX_DATA_CONNECTION_URI
          valueFrom:
            configMapKeyRef:
              key: qixDataConnectionUri
              name: dcaas-configs
        - name: REDIS_URI
          valueFrom:
            configMapKeyRef:
              key: redisUri
              name: dcaas-configs
        - name: SPACES_URI
          valueFrom:
            configMapKeyRef:
              key: spacesUri
              name: dcaas-configs
        - name: CONNECTIONS_CACHE_TTL
          value: "600"
        - name: EMULATE_STORAGE_PROVIDER
          value: "true"
        - name: ENABLE_CONNECTIONS_CACHE
          value: "false"
        - name: ENABLE_FEATUREFLAG_FILTERING
          value: "true"
        - name: ENABLE_JWT_AUTH
          value: "true"
        - name: ENABLE_NATS
          value: "false"
        - name: ENABLE_POD_LOAD_BALANCING
          value: "false"
        - name: ENABLE_SPACES_CACHE
          value: "false"
        - name: NODE_ENV
          value: production
        - name: SPACES_CACHE_TTL
          value: "1200"
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: OTLP_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: HTTP_PROXY
          valueFrom:
            configMapKeyRef:
              key: httpProxy
              name: qliksense-configs
        - name: HTTPS_PROXY
          valueFrom:
            configMapKeyRef:
              key: httpsProxy
              name: qliksense-configs
        - name: NO_PROXY
          valueFrom:
            configMapKeyRef:
              key: noProxy
              name: qliksense-configs
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              key: mongodbUri
              name: qliksense-secrets
        - name: MONGODB_URI_FILE
          value: /run/secrets/qlik.com/qliksense/mongodbUri
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redisPassword
              name: qliksense-secrets
        - name: REDIS_PASSWORD_FILE
          value: /run/secrets/qlik.com/qliksense/redisPassword
        - name: REDIS_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              key: redisEncryptionKey
              name: qliksense-secrets
        - name: REDIS_ENCRYPTION_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/redisEncryptionKey
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              key: minioRootUser
              name: qliksense-secrets
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: minioRootPassword
              name: qliksense-secrets
        - name: FORT_ID
          valueFrom:
            configMapKeyRef:
              key: fortId
              name: qliksense-configs
        - name: FORT_IOT_CERTIFICATE_ID
          valueFrom:
            configMapKeyRef:
              key: fortIotCertificateId
              name: qliksense-configs
        - name: FORT_IOT_THING_NAME
          valueFrom:
            configMapKeyRef:
              key: fortressId
              name: qliksense-configs
        - name: FORT_NAME
          valueFrom:
            configMapKeyRef:
              key: fortName
              name: qliksense-configs
        - name: FORT_ORIGIN_URL
          valueFrom:
            configMapKeyRef:
              key: fortOriginUrl
              name: qliksense-configs
        - name: FORT_TENANT_URL
          valueFrom:
            configMapKeyRef:
              key: fortTenantUrl
              name: qliksense-configs
        - name: FORTRESS_IOT_THING_ROLE_ALIAS_NAME
          valueFrom:
            configMapKeyRef:
              key: iotThingRoleAliasName
              name: qliksense-configs
        - name: FORTRESS_ID
          valueFrom:
            configMapKeyRef:
              key: fortressId
              name: qliksense-configs
        - name: FORTRESS_DEVICE_CREDENTIAL_ENDPOINT
          valueFrom:
            configMapKeyRef:
              key: iotCredentialUrl
              name: qliksense-configs
        - name: FORTRESS_IOT_CREDENTIAL_ENDPOINT
          value: https://$(FORTRESS_DEVICE_CREDENTIAL_ENDPOINT)
        - name: FORTRESS_REGION
          valueFrom:
            configMapKeyRef:
              key: iotAwsRegion
              name: qliksense-configs
        - name: FORTRESS_THING_CA_FILE
          value: /run/secrets/qlik.com/qliksense/iotRootCa
        - name: FORTRESS_THING_CERT_FILE
          value: /run/secrets/qlik.com/qliksense/iotFortThingCert
        - name: FORTRESS_THING_DATA_ENDPOINT
          valueFrom:
            configMapKeyRef:
              key: fortressThingDataEndpoint
              name: qliksense-configs
        - name: FORTRESS_THING_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotFortThingPrivateKey
        - name: FORTRESS_THING_NAME
          valueFrom:
            configMapKeyRef:
              key: thingName
              name: qliksense-configs
        - name: FORT_WEB_INTEGRATION_ID
          valueFrom:
            configMapKeyRef:
              key: fortWebIntegrationId
              name: qliksense-configs
        - name: FORT_TENANT_ID
          valueFrom:
            configMapKeyRef:
              key: tenantId
              name: qliksense-configs
        - name: FORT_PRIVATE_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotThingPrivateKey
        - name: FORT_IOT_PRIVATE_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotThingPrivateKey
        - name: JAEGER_DISABLED
          value: "true"
        - name: DISABLE_OTLP
          value: "true"
        - name: REDIS_ENCRYPTIONKEY
          value: $(REDIS_ENCRYPTION_KEY)
        - name: REDIS_ADDR
          value: $(REDIS_URI)
        image: ghcr.io/qlik-download/dcaas:5.4.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: http
        name: dcaas
        ports:
        - containerPort: 9026
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: http
        volumeMounts:
        - mountPath: /run/secrets/qlik.com/dcaas
          name: dcaas-secrets
          readOnly: true
        - mountPath: /etc/ssl/certs
          name: ca-certificates
        - mountPath: /run/secrets/qlik.com/qliksense
          name: qliksense-secrets
          readOnly: true
      dnsConfig:
        options:
        - name: timeout
          value: "1"
      imagePullSecrets:
      - name: artifactory-docker-secret
      volumes:
      - name: dcaas-secrets
        secret:
          secretName: dcaas-secrets
      - name: ca-certificates
        persistentVolumeClaim:
          claimName: ca-certificates
      - name: qliksense-secrets
        secret:
          secretName: qliksense-secrets
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
    nginx.ingress.kubernetes.io/auth-response-headers: Authorization
    nginx.ingress.kubernetes.io/auth-url: http://edge-auth.$(NAMESPACE).svc.cluster.local:8080/v1/auth
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite (?i)/api/dcaas/(.*) /$1 break;
      rewrite (?i)/dcaas/(.*) /$1 break;
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
  labels:
    app: dcaas
    app.kubernetes.io/component: dcaas
    app.kubernetes.io/instance: dcaas
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 5.4.0
    chart: dcaas-5.4.0
    domain: data-connectors
    heritage: Helm
    release: qlik-default
  name: dcaas
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - backend:
          service:
            name: dcaas
            port:
              number: 9026
        path: /api/dcaas/datasources
        pathType: ImplementationSpecific
      - backend:
          service:
            name: dcaas
            port:
              number: 9026
        path: /api/dcaas/command
        pathType: ImplementationSpecific
