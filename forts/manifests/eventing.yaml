apiVersion: v1
data:
  conditionManagerUri: http://fort-region-gateway:8080
  edgeAuthUri: http://edge-auth:8080
  emergencyRestartOnlyEventing: changeThisValueIfNeedRestart1
  featureFlagsUri: http://feature-flags:8080
  fortressIotCredentialEndpoint: c3l6iiqk0imdki.credentials.iot.us-east-1.amazonaws.com
  fortressMqttUseWebsocket: "true"
  fortressThingDataEndpoint: a8zv9tv0e426f-ats.iot.us-east-1.amazonaws.com
  fortressThingName: QCS
  ingressAuthUrl: http://edge-auth.default.svc.cluster.local:8080/v1/auth
  iotThingRoleAliasName: some-role-alias
  keysUri: http://keys:8080
  logLevel: debug
  natsStreamingClusterId: messaging-nats-streaming-cluster
  natsUri: http://messaging-nats-client:4222
  notificationPrepUri: http://notification-prep:8080
  redisEnabled: "false"
  redisUri: redis://redis-master:6379
  spacesUri: http://spaces:6080
  subscriptionsUri: http://fort-region-gateway:8080
  tenantsUri: http://tenants:8080
  transportAlertNotificationsDisabled: "true"
  transportFortBridgeDisabled: "false"
  transportNotificationsDisabled: "true"
  transportTriggersDisabled: "true"
  transportUsersDisabled: "true"
  transportWebsocketDisabled: "true"
  useWebsocket: "true"
  usersUri: http://identities:8080
kind: ConfigMap
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
  labels:
    app: eventing
    app.kubernetes.io/component: eventing
    app.kubernetes.io/instance: eventing
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 2.3.120
    chart: eventing-2.3.120
    domain: qcs-infra
    heritage: Helm
    release: qlik-default
  name: eventing-configs
  namespace: default
---
apiVersion: v1
data:
  fortressThingCa: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRVENDQWltZ0F3SUJBZ0lUQm15Zno1bS9qQW81NHZCNGlrUG1salpieWpBTkJna3Foa2lHOXcwQkFRc0YKQURBNU1Rc3dDUVlEVlFRR0V3SlZVekVQTUEwR0ExVUVDaE1HUVcxaGVtOXVNUmt3RndZRFZRUURFeEJCYldGNgpiMjRnVW05dmRDQkRRU0F4TUI0WERURTFNRFV5TmpBd01EQXdNRm9YRFRNNE1ERXhOekF3TURBd01Gb3dPVEVMCk1Ba0dBMVVFQmhNQ1ZWTXhEekFOQmdOVkJBb1RCa0Z0WVhwdmJqRVpNQmNHQTFVRUF4TVFRVzFoZW05dUlGSnYKYjNRZ1EwRWdNVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMSjRnSEhLZU5YagpjYTlIZ0ZCMGZXN1kxNGgyOUpsbzkxZ2hZUGwwaEFFdnJBSXRodE9nUTNwT3NxVFFOcm9Cdm8zYlNNZ0hGelpNCjlPNklJOGMrNnpmMXRSbjRTV2l3M3RlNWRqZ2RZWjZrL29JMnBlVktWdVJGNGZuOXRCYjZkTnFjbXpVNUwvcXcKSUZBR2JIclFnTEttK2Evc1J4bVBVRGdIM0tLSE9WajR1dFdwK1Vobk1KYnVsSGhlYjRtalVjQXdobWFoUldhNgpWT3VqdzVINVNOei8wZWd3TFgwdGRIQTExNGdrOTU3RVdXNjdjNGNYOGpKR0tMaEQrcmNkcXNxMDhwOGtEaTFMCjkzRmNYbW4vNnBVQ3l6aUtybEE0Yjl2N0xXSWJ4Y2NlVk9GMzRHZklENXlISTlZL1FDQi9JSURFZ0V3K095UW0KamdTdWJKcklxZzBDQXdFQUFhTkNNRUF3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFPQmdOVkhROEJBZjhFQkFNQwpBWVl3SFFZRFZSME9CQllFRklRWXpJVTA3THdNbEpRdUNGbWN4N0lRVGdvSU1BMEdDU3FHU0liM0RRRUJDd1VBCkE0SUJBUUNZOGpkYVFaQ2hHc1YyVVNnZ05pTU9ydVlvdTZyNGxLNUlwREIvRy93a2pVdTB5S0dYOXJieGVuREkKVTVQTUNDamptQ1hQSTZUNTNpSFRmSVVKclU2YWRUckNDMnFKZUhaRVJ4aGxiSTFCamp0L21zdjB0YWRRMXdVcwpOK2dEUzYzcFlhQUNidlh5OE1XeTdWdTMzUHFVWEhlZUU2Vi9VcTJWOHZpVE85NkxYRnZLV2xKYllLOFU5MHZ2Cm8vdWZRSlZ0TVZUOFF0UEhSaDhqcmRrUFNIQ2EyWFY0Y2RGeVF6UjFibGRad2dKY0ptQXB6eU1aRm82SVE2WFUKNU1zSSt5TVJRK2hES1hKaW9hbGRYZ2pVa0s2NDJNNFV3dEJWOG9iMnhKTkRkMlpod0xub1FkZVhlR0FEYmtweQpycVhSZmJvUW5vWnNHNHE1V1RQNDY4U1F2dkc1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  fortressThingCert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXakNDQWtLZ0F3SUJBZ0lWQU5LR0N2Y05Rb2R1MUdmK3BGb0tHeFZ1NURWOU1BMEdDU3FHU0liM0RRRUIKQ3dVQU1FMHhTekJKQmdOVkJBc01Ra0Z0WVhwdmJpQlhaV0lnVTJWeWRtbGpaWE1nVHoxQmJXRjZiMjR1WTI5dApJRWx1WXk0Z1REMVRaV0YwZEd4bElGTlVQVmRoYzJocGJtZDBiMjRnUXoxVlV6QWVGdzB5TVRBeU1qUXhOelF3Ck16SmFGdzAwT1RFeU16RXlNelU1TlRsYU1CNHhIREFhQmdOVkJBTU1FMEZYVXlCSmIxUWdRMlZ5ZEdsbWFXTmgKZEdVd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNpQkVpUE0zcEMzTmxVbW1Wawp3bm1wUU5ja1NnL1U3RWJGUUxSNkVxM3dBV2xhTklBbFU0VXhubmM4bms2cmRqYnpTUUVYcTdFTk5DSU90SGpoCk4vMzM0U3hESk40T3ViYjFNRTRRUHVwMEhHdnNpdDM0OVRPNDRxZjhzeGVPY1dWOGltWkZ3a1h3TlRDamp2c00KSWdWeUxSQm5RaloycGRmRllROUcvcEMyYUpYVERwNGJ4UVF4aVF5aDJqWEFCbEJBQ1lKRndMM0pQb21JQ2ltagpXUUNjenJDYTUxWWtWNGphOHRNRlVIQS9nT0xRY3llYVFqVEk0VTlVb0QvL0xQTzhkWWc5QkdodWs5VisxY1U4CjJHaVVwY2lBY2tRQVlCVjFRaWNWNm5aVUFLM0hGTXVqaUh6VUFIMDRlWmx2N01FYTQybHpvK3BKZlpGTUZ1NlEKQWJxcEFnTUJBQUdqWURCZU1COEdBMVVkSXdRWU1CYUFGSU1Pc2V5bHZ3QWNqL1Z6NHcxSHorQkthdjIyTUIwRwpBMVVkRGdRV0JCUlUrR2F5SkswM2JIK0tsSUFKek9EcHFhVHBtakFNQmdOVkhSTUJBZjhFQWpBQU1BNEdBMVVkCkR3RUIvd1FFQXdJSGdEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFrK25jaTFtY3hJcXBwVjJCczl3SzlFcFUKUjA2ekNnRXZDdGhiT1BuWTJZaU9KWVlkYlp3czRSNDFjSjF2VDNMNHE3UEF4V1BmM3dvYVJUdklISTBDNWk2TQpaUmpQWDA0WENXWTZZSU55UGdqYWJiTDlBSVNEWGNwb0gyTU9GYUlqZFYzNGRhSm1UQUJ3ME83Uk85bXRGbnZpClV0WFA2bE1CR1dYbVdWYVJTcGw4USthUm90eVYrbmd4a1cweWRDckdrSFN1aC84cGRMa011RHlvT1lNT2syMWsKd2t0Q0FQVkdhOWpRK3VYVnYvckk3QlZLL1lYSSt2bmJWckgyeFFLQnhJYkhJbGdKRkZWRTZ0UFk3SDFZNXh6TQpEak96ZFc4N1phWU4zbUtMTnN1WktvcXN3b1NpdVo3NlQ0NUpUSHRvcEdHSXlIS2poYTJKRHJ2MnZlWVU5dz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  fortressThingKey: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBb2dSSWp6TjZRdHpaVkpwbFpNSjVxVURYSkVvUDFPeEd4VUMwZWhLdDhBRnBXalNBCkpWT0ZNWjUzUEo1T3EzWTI4MGtCRjZ1eERUUWlEclI0NFRmOTkrRXNReVRlRHJtMjlUQk9FRDdxZEJ4cjdJcmQKK1BVenVPS24vTE1Yam5GbGZJcG1SY0pGOERVd280NzdEQ0lGY2kwUVowSTJkcVhYeFdFUFJ2NlF0bWlWMHc2ZQpHOFVFTVlrTW9kbzF3QVpRUUFtQ1JjQzl5VDZKaUFvcG8xa0FuTTZ3bXVkV0pGZUkydkxUQlZCd1A0RGkwSE1uCm1rSTB5T0ZQVktBLy95enp2SFdJUFFSb2JwUFZmdFhGUE5ob2xLWElnSEpFQUdBVmRVSW5GZXAyVkFDdHh4VEwKbzRoODFBQjlPSG1aYit6Qkd1TnBjNlBxU1gyUlRCYnVrQUc2cVFJREFRQUJBb0lCQUNVK3l0ZHd4QmgrNE05YwpOeGIweGpjc21zalM1ZFRUQkdud09BMGdJakJjZ3JXa0FCbVVtN2dPYitiVmxjeEEvdHpxMlg5eGp1QTBMZWduCmdPcDFqc0xmVnVlUW9DUE9lY3JmOGZJMkpIdlExTmFxRGVGZnJTWkJwTkNvOHk5aHppelZQREdwT1o3QSs0OSsKSFNScTVjbWJwbnUyY3dMUG1VemN4VUJTNFQydGE1bVhNQWlNUnVHNitlV2wzS3RoWHFiMlVNa0Z4eHBWTjQzVQpSYko4dTJpY0xvMW9qbE85ajZGeHB5blN4eWZ6R2xwZFBiOFh1OVVoa2E4YzIrclh2TkRZK0lmRDVzNHl0bHkrCkVQRkZkZmZGYWo1UHZQb1Y0QVhKZUR0bmJLcGxFTDAzR0dDUnl0MFh1QnFKU2FRd1NGSFR4NG1mWGp5aFdMdmkKc0ZQVGNva0NnWUVBMU5YelY5cE9DR05PcWh2Vmw5a3Q3ZlVxczkraG9pc1pFRERBSTZKMm9CYjRPNDcrL2IrTAo4VnpXTlNrMGcxMXZWQ2FvblhwajdpcE5KM09KcmcrWW5NWnl0SjJwbjNBK1hqNEtpMEIzbDl1Ymx0bWVpZC9BCkpRcEhhaFU1WGhGeTBXSndtZXM3YjEvZTdOOEpyY3NOQUhhczNoR2ZJM09tUU1BN2pxTXkwbWNDZ1lFQXd0L20KcklSNXZ2bDFONWRqU2xDQUR6cjd3OFh5UDBQUDN1YWFFRGc4a21OaWxqQU1LekN6TTd1ckt4cjY2UkNGSVl6Zwp1cVhPcVZ5WHBHc1dVSTVianYyR2JDbk1ISVlrTGdiNjZVQm9Lek5rV2swS3l2eUUvUGF5Qys2bTkyYVU0RlNhCmxXOGhoMmdPbEtDQjluNW4yVmlIaWVYVGtnNzVsTVBOMkhUemdHOENnWUJFZ3JwYVJVTnBIODVxbzVzVnppc2kKdGhDUTVpTzVkL1lSYUIveFdKS201YjN5TGcyVzBOblRUL2NFRmNkNW9kSDhYSlZhVzlOZkR1N1hEREg5ZmJlNgpmNGJjN1FOMDkwU2NRWXhUVnVVb1ZPQzRwa1NLVFNRa3lESkV5NkF6ejVvT0hJbnlnZTRYNDl4Mmt6VWlaSUpDCjYvQ3BheksyenJ0dGpIT2ZicGtsY1FLQmdGS2kvYitrZ2JnUk1ycTdNTGlmd0Y0MUJmUXo2WkVZWVhyRlVRbVYKdjJIWVVVTWM1dHdkejdBZFllMXFpSUh5cG5IZXVxR0xsRUpQYUdLcG9wSFFmRlQ3ZjFnNHRUeFhTZHBXelduQwpEU3BjcGE2QlF4Vm0xY0lybnI3ZW1lRUptQkkwN2tSMkZzTER4b01TT1dwY21nOFpzb2d3ZEhKWWRVKzNaSC9vCndDVnpBb0dCQUtRajFhSitmQXJIRGNQMGZtL3orUkt1SlljKzJRN25WMjVUWEtzdzUyR0pXOU5MQ0U4cEp1MXUKWE9TRGxtOUFsUy9xSFgyWSs3bEtxYjA2VGNudXFKV05PaEt5WndYWGpQaEhKc3A4enM3amU0WlpGODZNUTNiUwpGL254dWcyWVFtbmJmckJYQlU1YWMxd0dxTlRTUElLNmZRUm9tZUc5blFiZjdtOHBRL29aCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  mongodbUri: bW9uZ29kYjovL2VsYXN0aWMtaW5mcmEtbW9uZ29kYjoyNzAxNy9ldmVudGluZz9zc2w9ZmFsc2U=
  tokenAuthPrivateKey: PLACEHOLDER
  tokenAuthPrivateKeyId: X2E5bGdwbmFqZ0lBUHhaSXJPZnlKMk9feEZ5RVAwUXl5d1dld3lZTm9Xbw==
kind: Secret
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
  labels:
    app: eventing
    app.kubernetes.io/component: eventing
    app.kubernetes.io/instance: eventing
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 2.3.120
    chart: eventing-2.3.120
    domain: qcs-infra
    heritage: Helm
    release: qlik-default
  name: eventing-secrets
  namespace: default
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app: eventing
    app.kubernetes.io/component: eventing
    app.kubernetes.io/instance: eventing
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 2.3.120
    chart: eventing-2.3.120
    domain: qcs-infra
    heritage: Helm
    release: qlik-default
  name: eventing
  namespace: default
spec:
  ports:
  - name: eventing
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: eventing
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    release: qlik-default
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
  labels:
    app: eventing
    app.kubernetes.io/component: eventing
    app.kubernetes.io/instance: eventing
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 2.3.120
    chart: eventing-2.3.120
    domain: qcs-infra
    heritage: Helm
    release: qlik-default
  name: eventing
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: eventing
      app.kubernetes.io/name: qliksense
      app.kubernetes.io/part-of: qliksense
      release: qlik-default
  template:
    metadata:
      annotations:
        app.kubernetes.io/name: eventing
        checksum/configs: 2845d0380b2dcd2db1992cbdae32272eaed34ab2a13bda20a0f5284e1ec237c8
        checksum/secrets: ac3fe351ed7483c3d9b03bf9005085f8f7ad52457d5c681d36d05170cf72f40e
      labels:
        app: eventing
        app.kubernetes.io/name: qliksense
        app.kubernetes.io/part-of: qliksense
        domain: qcs-infra
        messaging-nats-client: "true"
        release: qlik-default
    spec:
      containers:
      - env:
        - name: NATS_CLIENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: TOKEN_AUTH_PRIVATE_KEY_FILE
          value: /run/secrets/qlik.com/eventing/tokenAuthPrivateKey
        - name: TOKEN_AUTH_PRIVATE_KEY_ID_FILE
          value: /run/secrets/qlik.com/eventing/tokenAuthPrivateKeyId
        - name: CONDITION_MANAGER_URI
          valueFrom:
            configMapKeyRef:
              key: conditionManagerUri
              name: eventing-configs
        - name: EDGE_AUTH_URI
          valueFrom:
            configMapKeyRef:
              key: edgeAuthUri
              name: eventing-configs
        - name: EMERGENCY_RESTART_ONLY_EVENTING
          valueFrom:
            configMapKeyRef:
              key: emergencyRestartOnlyEventing
              name: eventing-configs
        - name: FEATURE_FLAGS_URI
          valueFrom:
            configMapKeyRef:
              key: featureFlagsUri
              name: eventing-configs
        - name: FORTRESS_MQTT_USE_WEBSOCKET
          valueFrom:
            configMapKeyRef:
              key: fortressMqttUseWebsocket
              name: eventing-configs
        - name: INGRESS_AUTH_URL
          valueFrom:
            configMapKeyRef:
              key: ingressAuthUrl
              name: eventing-configs
        - name: KEYS_URI
          valueFrom:
            configMapKeyRef:
              key: keysUri
              name: eventing-configs
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              key: logLevel
              name: eventing-configs
        - name: NATS_STREAMING_CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: natsStreamingClusterId
              name: eventing-configs
        - name: NATS_URI
          valueFrom:
            configMapKeyRef:
              key: natsUri
              name: eventing-configs
        - name: NOTIFICATION_PREP_URI
          valueFrom:
            configMapKeyRef:
              key: notificationPrepUri
              name: eventing-configs
        - name: REDIS_ENABLED
          valueFrom:
            configMapKeyRef:
              key: redisEnabled
              name: eventing-configs
        - name: REDIS_URI
          valueFrom:
            configMapKeyRef:
              key: redisUri
              name: eventing-configs
        - name: SPACES_URI
          valueFrom:
            configMapKeyRef:
              key: spacesUri
              name: eventing-configs
        - name: SUBSCRIPTIONS_URI
          valueFrom:
            configMapKeyRef:
              key: subscriptionsUri
              name: eventing-configs
        - name: TENANTS_URI
          valueFrom:
            configMapKeyRef:
              key: tenantsUri
              name: eventing-configs
        - name: TRANSPORT_ALERT_NOTIFICATIONS_DISABLED
          valueFrom:
            configMapKeyRef:
              key: transportAlertNotificationsDisabled
              name: eventing-configs
        - name: TRANSPORT_FORT_BRIDGE_DISABLED
          valueFrom:
            configMapKeyRef:
              key: transportFortBridgeDisabled
              name: eventing-configs
        - name: TRANSPORT_NOTIFICATIONS_DISABLED
          valueFrom:
            configMapKeyRef:
              key: transportNotificationsDisabled
              name: eventing-configs
        - name: TRANSPORT_TRIGGERS_DISABLED
          valueFrom:
            configMapKeyRef:
              key: transportTriggersDisabled
              name: eventing-configs
        - name: TRANSPORT_USERS_DISABLED
          valueFrom:
            configMapKeyRef:
              key: transportUsersDisabled
              name: eventing-configs
        - name: TRANSPORT_WEBSOCKET_DISABLED
          valueFrom:
            configMapKeyRef:
              key: transportWebsocketDisabled
              name: eventing-configs
        - name: USE_WEBSOCKET
          valueFrom:
            configMapKeyRef:
              key: useWebsocket
              name: eventing-configs
        - name: USERS_URI
          valueFrom:
            configMapKeyRef:
              key: usersUri
              name: eventing-configs
        - name: NATS_ENABLED
          value: "true"
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: OTLP_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: HTTP_PROXY
          valueFrom:
            configMapKeyRef:
              key: httpProxy
              name: qliksense-configs
        - name: HTTPS_PROXY
          valueFrom:
            configMapKeyRef:
              key: httpsProxy
              name: qliksense-configs
        - name: NO_PROXY
          valueFrom:
            configMapKeyRef:
              key: noProxy
              name: qliksense-configs
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              key: mongodbUri
              name: qliksense-secrets
        - name: MONGODB_URI_FILE
          value: /run/secrets/qlik.com/qliksense/mongodbUri
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redisPassword
              name: qliksense-secrets
        - name: REDIS_PASSWORD_FILE
          value: /run/secrets/qlik.com/qliksense/redisPassword
        - name: REDIS_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              key: redisEncryptionKey
              name: qliksense-secrets
        - name: REDIS_ENCRYPTION_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/redisEncryptionKey
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              key: minioRootUser
              name: qliksense-secrets
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: minioRootPassword
              name: qliksense-secrets
        - name: FORT_ID
          valueFrom:
            configMapKeyRef:
              key: fortId
              name: qliksense-configs
        - name: FORT_IOT_CERTIFICATE_ID
          valueFrom:
            configMapKeyRef:
              key: fortIotCertificateId
              name: qliksense-configs
        - name: FORT_IOT_THING_NAME
          valueFrom:
            configMapKeyRef:
              key: fortressId
              name: qliksense-configs
        - name: FORT_NAME
          valueFrom:
            configMapKeyRef:
              key: fortName
              name: qliksense-configs
        - name: FORT_ORIGIN_URL
          valueFrom:
            configMapKeyRef:
              key: fortOriginUrl
              name: qliksense-configs
        - name: FORT_TENANT_URL
          valueFrom:
            configMapKeyRef:
              key: fortTenantUrl
              name: qliksense-configs
        - name: FORTRESS_IOT_THING_ROLE_ALIAS_NAME
          valueFrom:
            configMapKeyRef:
              key: iotThingRoleAliasName
              name: qliksense-configs
        - name: FORTRESS_ID
          valueFrom:
            configMapKeyRef:
              key: fortressId
              name: qliksense-configs
        - name: FORTRESS_DEVICE_CREDENTIAL_ENDPOINT
          valueFrom:
            configMapKeyRef:
              key: iotCredentialUrl
              name: qliksense-configs
        - name: FORTRESS_IOT_CREDENTIAL_ENDPOINT
          value: https://$(FORTRESS_DEVICE_CREDENTIAL_ENDPOINT)
        - name: FORTRESS_REGION
          valueFrom:
            configMapKeyRef:
              key: iotAwsRegion
              name: qliksense-configs
        - name: FORTRESS_THING_CA_FILE
          value: /run/secrets/qlik.com/qliksense/iotRootCa
        - name: FORTRESS_THING_CERT_FILE
          value: /run/secrets/qlik.com/qliksense/iotFortThingCert
        - name: FORTRESS_THING_DATA_ENDPOINT
          valueFrom:
            configMapKeyRef:
              key: fortressThingDataEndpoint
              name: qliksense-configs
        - name: FORTRESS_THING_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotFortThingPrivateKey
        - name: FORTRESS_THING_NAME
          valueFrom:
            configMapKeyRef:
              key: thingName
              name: qliksense-configs
        - name: FORT_WEB_INTEGRATION_ID
          valueFrom:
            configMapKeyRef:
              key: fortWebIntegrationId
              name: qliksense-configs
        - name: FORT_TENANT_ID
          valueFrom:
            configMapKeyRef:
              key: tenantId
              name: qliksense-configs
        - name: FORT_PRIVATE_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotThingPrivateKey
        - name: FORT_IOT_PRIVATE_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotThingPrivateKey
        - name: JAEGER_DISABLED
          value: "true"
        - name: DISABLE_OTLP
          value: "true"
        - name: REGION
          value: $(FORTRESS_REGION)
        - name: DEVICE_CREDENTIAL_ENDPOINT
          value: $(FORTRESS_DEVICE_CREDENTIAL_ENDPOINT)
        - name: IOT_THING_ROLE_ALIAS_NAME
          value: $(FORTRESS_IOT_THING_ROLE_ALIAS_NAME)
        image: ghcr.io/qlik-download/eventing:2.3.120
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: http
        name: eventing
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http
        volumeMounts:
        - mountPath: /run/secrets/qlik.com/eventing
          name: eventing-secrets
          readOnly: true
        - mountPath: /etc/ssl/certs
          name: ca-certificates
        - mountPath: /run/secrets/qlik.com/qliksense
          name: qliksense-secrets
          readOnly: true
      imagePullSecrets:
      - name: artifactory-docker-secret
      volumes:
      - name: eventing-secrets
        secret:
          secretName: eventing-secrets
      - name: ca-certificates
        persistentVolumeClaim:
          claimName: ca-certificates
      - name: qliksense-secrets
        secret:
          secretName: qliksense-secrets
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
    nginx.ingress.kubernetes.io/auth-response-headers: Authorization
    nginx.ingress.kubernetes.io/auth-snippet: |
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Upgrade $http_upgrade;
    nginx.ingress.kubernetes.io/auth-url: http://edge-auth.default.svc.cluster.local:8080/v1/auth
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite (?i)/api/(.*) /$1 break;
    nginx.ingress.kubernetes.io/enable-cors: "true"
  labels:
    app: eventing
    app.kubernetes.io/component: eventing
    app.kubernetes.io/instance: eventing
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 2.3.120
    chart: eventing-2.3.120
    domain: qcs-infra
    heritage: Helm
    release: qlik-default
  name: eventing
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - backend:
          service:
            name: eventing
            port:
              number: 8080
        path: /api/v1/events
        pathType: ImplementationSpecific
