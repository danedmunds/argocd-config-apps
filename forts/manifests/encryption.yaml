apiVersion: v1
data:
  mongodbUri: bW9uZ29kYjovL21vbmdvZGI6MjcwMTcvZW5jcnlwdGlvbg==
kind: Secret
metadata:
  labels:
    app: encryption
    app.kubernetes.io/component: encryption
    app.kubernetes.io/instance: encryption
    app.kubernetes.io/name: encryption
    app.kubernetes.io/version: 5.9.9
    chart: encryption-5.9.9
    heritage: Helm
    release: encryption
  name: encryption-secrets
  namespace: default
type: Opaque
---
apiVersion: v1
data:
  edgeAuthUri: http://edge-auth:8080
  featureFlagsUri: http://feature-flags:8080
  ingressAuthUrl: http://edge-auth.default.svc.cluster.local:8080/v1/auth
  keysUri: http://keys:8080
  logLevel: info
  natsStreamingClusterId: messaging-nats-streaming-cluster
  natsUri: http://messaging-nats-client:4222
kind: ConfigMap
metadata:
  labels:
    app: encryption
    app.kubernetes.io/component: encryption
    app.kubernetes.io/instance: encryption
    app.kubernetes.io/name: encryption
    app.kubernetes.io/version: 5.9.9
    chart: encryption-5.9.9
    heritage: Helm
    release: encryption
  name: encryption-configs
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app: encryption
    app.kubernetes.io/component: encryption
    app.kubernetes.io/instance: encryption
    app.kubernetes.io/name: encryption
    app.kubernetes.io/version: 5.9.9
    chart: encryption-5.9.9
    heritage: Helm
    release: encryption
  name: encryption
  namespace: default
spec:
  ports:
    - name: encryption
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: encryption
    release: encryption
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: encryption
    app.kubernetes.io/component: encryption
    app.kubernetes.io/instance: encryption
    app.kubernetes.io/name: encryption
    app.kubernetes.io/version: 5.9.9
    chart: encryption-5.9.9
    heritage: Helm
    release: encryption
  name: encryption
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: encryption
      release: encryption
  template:
    metadata:
      annotations:
        checksum/configs: fbbfcc45e1ea7647d666a8157c50f014235e0d65798720c09b580e1a9856e4e4
        checksum/secrets: 4a8b3d0fb28da736eabd652696a78bac8c0b6691995de8fff0ac6d743679ec5b
      labels:
        app: encryption
        messaging-nats-client: "true"
        release: encryption
    spec:
      containers:
        - env:
            - name: NATS_CLIENT_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: EDGE_AUTH_URI
              valueFrom:
                configMapKeyRef:
                  key: edgeAuthUri
                  name: encryption-configs
            - name: FEATURE_FLAGS_URI
              valueFrom:
                configMapKeyRef:
                  key: featureFlagsUri
                  name: encryption-configs
            - name: INGRESS_AUTH_URL
              valueFrom:
                configMapKeyRef:
                  key: ingressAuthUrl
                  name: encryption-configs
            - name: KEYS_URI
              valueFrom:
                configMapKeyRef:
                  key: keysUri
                  name: encryption-configs
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: logLevel
                  name: encryption-configs
            - name: NATS_STREAMING_CLUSTER_ID
              valueFrom:
                configMapKeyRef:
                  key: natsStreamingClusterId
                  name: encryption-configs
            - name: NATS_URI
              valueFrom:
                configMapKeyRef:
                  key: natsUri
                  name: encryption-configs
            - name: DISABLE_OTLP
              value: "true"
            - name: JAEGER_DISABLED
              value: "true"
            - name: AUTH_ENABLED
              value: "true"
            - name: BACKEND_TYPE
              value: loopback
            - name: ENVIRONMENT
              value: qseok
            - name: KEYS_ENDPOINT
              value: /v1/keys/qlik.api.internal
            - name: JAEGER_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTLP_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: HTTP_PROXY
              valueFrom:
                configMapKeyRef:
                  key: httpProxy
                  name: qliksense-configs
            - name: HTTPS_PROXY
              valueFrom:
                configMapKeyRef:
                  key: httpsProxy
                  name: qliksense-configs
            - name: NO_PROXY
              valueFrom:
                configMapKeyRef:
                  key: noProxy
                  name: qliksense-configs
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  key: mongodbUri
                  name: qliksense-secrets
            - name: MONGODB_URI_FILE
              value: /run/secrets/qlik.com/qliksense/mongodbUri
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: redisPassword
                  name: qliksense-secrets
            - name: REDIS_PASSWORD_FILE
              value: /run/secrets/qlik.com/qliksense/redisPassword
          image: ghcr.io/qlik-download/encryption:5.9.9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /health
              port: http
          name: encryption
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health
              port: http
          volumeMounts:
            - mountPath: /run/secrets/qlik.com/encryption
              name: encryption-secrets
              readOnly: true
            - mountPath: /etc/ssl/certs
              name: ca-certificates
            - mountPath: /run/secrets/qlik.com/qliksense
              name: qliksense-secrets
      imagePullSecrets:
        - name: artifactory-docker-secret
      volumes:
        - name: encryption-secrets
          secret:
            secretName: encryption-secrets
        - name: ca-certificates
          persistentVolumeClaim:
            claimName: ca-certificates
        - name: qliksense-secrets
          secret:
            secretName: qliksense-secrets
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: encryption
    app.kubernetes.io/component: encryption
    app.kubernetes.io/instance: encryption
    app.kubernetes.io/name: encryption
    app.kubernetes.io/version: 5.9.9
    chart: encryption-5.9.9
    heritage: Helm
    release: encryption
  name: encryption
  namespace: default
spec:
  maxReplicas: 1
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: encryption
