apiVersion: v1
data:
  edgeAuthUri: http://edge-auth:8080
  featureFlagsUri: http://feature-flags:8080
  ingressAuthUrl: http://edge-auth.default.svc.cluster.local:8080/v1/auth
  keysUri: http://keys:8080
  logLevel: info
  natsStreamingClusterId: messaging-nats-streaming-cluster
  natsUri: http://messaging-nats-client:4222
kind: ConfigMap
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
  labels:
    app: encryption
    app.kubernetes.io/component: encryption
    app.kubernetes.io/instance: encryption
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 6.0.25
    chart: encryption-6.0.25
    domain: qcs-infra
    heritage: Helm
    release: qlik-default
  name: encryption-configs
  namespace: default
---
apiVersion: v1
data:
  mongodbUri: bW9uZ29kYjovL21vbmdvZGI6MjcwMTcvZW5jcnlwdGlvbg==
  tokenAuthPrivateKey: PLACEHOLDER
  tokenAuthPrivateKeyId: b25wZ2R6OF95ZlJ5OVN0OWZ1bU1QdzVRMEZueDljRnp0RnpfaGloMVQ4RQ==
kind: Secret
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
  labels:
    app: encryption
    app.kubernetes.io/component: encryption
    app.kubernetes.io/instance: encryption
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 6.0.25
    chart: encryption-6.0.25
    domain: qcs-infra
    heritage: Helm
    release: qlik-default
  name: encryption-secrets
  namespace: default
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app: encryption
    app.kubernetes.io/component: encryption
    app.kubernetes.io/instance: encryption
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 6.0.25
    chart: encryption-6.0.25
    domain: qcs-infra
    heritage: Helm
    release: qlik-default
  name: encryption
  namespace: default
spec:
  ports:
  - name: encryption
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: encryption
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    release: qlik-default
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
  labels:
    app: encryption
    app.kubernetes.io/component: encryption
    app.kubernetes.io/instance: encryption
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 6.0.25
    chart: encryption-6.0.25
    domain: qcs-infra
    heritage: Helm
    release: qlik-default
  name: encryption
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: encryption
      app.kubernetes.io/name: qliksense
      app.kubernetes.io/part-of: qliksense
      release: qlik-default
  template:
    metadata:
      annotations:
        app.kubernetes.io/name: encryption
        checksum/configs: a25c9d4bf6d9ca092043c74fc580b47643985f21bdc0a377fd63e4adbac7f761
        checksum/secrets: 7a548ef2303e13cedf5842c62fdfcd12f8931673ce86033795c206c45a026375
      labels:
        app: encryption
        app.kubernetes.io/name: qliksense
        app.kubernetes.io/part-of: qliksense
        domain: qcs-infra
        messaging-nats-client: "true"
        release: qlik-default
    spec:
      containers:
      - env:
        - name: NATS_CLIENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: TOKEN_AUTH_PRIVATE_KEY_FILE
          value: /run/secrets/qlik.com/encryption/tokenAuthPrivateKey
        - name: TOKEN_AUTH_PRIVATE_KEY_ID_FILE
          value: /run/secrets/qlik.com/encryption/tokenAuthPrivateKeyId
        - name: EDGE_AUTH_URI
          valueFrom:
            configMapKeyRef:
              key: edgeAuthUri
              name: encryption-configs
        - name: FEATURE_FLAGS_URI
          valueFrom:
            configMapKeyRef:
              key: featureFlagsUri
              name: encryption-configs
        - name: INGRESS_AUTH_URL
          valueFrom:
            configMapKeyRef:
              key: ingressAuthUrl
              name: encryption-configs
        - name: KEYS_URI
          valueFrom:
            configMapKeyRef:
              key: keysUri
              name: encryption-configs
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              key: logLevel
              name: encryption-configs
        - name: NATS_STREAMING_CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: natsStreamingClusterId
              name: encryption-configs
        - name: NATS_URI
          valueFrom:
            configMapKeyRef:
              key: natsUri
              name: encryption-configs
        - name: AUTH_ENABLED
          value: "true"
        - name: AWS_BYOK_PROXY_ROLE
          value: arn:aws:iam::842328160883:role/byok-proxy-account-primary-role
        - name: BACKEND_TYPE
          value: loopback
        - name: BATCH_SIZE
          value: "1500"
        - name: BYOK_VERSION
          value: BYOKv1
        - name: ENVIRONMENT
          value: qseok
        - name: KEYS_ENDPOINT
          value: /v1/keys/qlik.api.internal
        - name: REGION
          value: us-west-1
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: OTLP_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: HTTP_PROXY
          valueFrom:
            configMapKeyRef:
              key: httpProxy
              name: qliksense-configs
        - name: HTTPS_PROXY
          valueFrom:
            configMapKeyRef:
              key: httpsProxy
              name: qliksense-configs
        - name: NO_PROXY
          valueFrom:
            configMapKeyRef:
              key: noProxy
              name: qliksense-configs
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              key: mongodbUri
              name: qliksense-secrets
        - name: MONGODB_URI_FILE
          value: /run/secrets/qlik.com/qliksense/mongodbUri
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redisPassword
              name: qliksense-secrets
        - name: REDIS_PASSWORD_FILE
          value: /run/secrets/qlik.com/qliksense/redisPassword
        - name: REDIS_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              key: redisEncryptionKey
              name: qliksense-secrets
        - name: REDIS_ENCRYPTION_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/redisEncryptionKey
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              key: minioRootUser
              name: qliksense-secrets
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: minioRootPassword
              name: qliksense-secrets
        - name: FORT_ID
          valueFrom:
            configMapKeyRef:
              key: fortId
              name: qliksense-configs
        - name: FORT_IOT_CERTIFICATE_ID
          valueFrom:
            configMapKeyRef:
              key: fortIotCertificateId
              name: qliksense-configs
        - name: FORT_IOT_THING_NAME
          valueFrom:
            configMapKeyRef:
              key: fortressId
              name: qliksense-configs
        - name: FORT_NAME
          valueFrom:
            configMapKeyRef:
              key: fortName
              name: qliksense-configs
        - name: FORT_ORIGIN_URL
          valueFrom:
            configMapKeyRef:
              key: fortOriginUrl
              name: qliksense-configs
        - name: FORT_TENANT_URL
          valueFrom:
            configMapKeyRef:
              key: fortTenantUrl
              name: qliksense-configs
        - name: FORTRESS_IOT_THING_ROLE_ALIAS_NAME
          valueFrom:
            configMapKeyRef:
              key: iotThingRoleAliasName
              name: qliksense-configs
        - name: FORTRESS_ID
          valueFrom:
            configMapKeyRef:
              key: fortressId
              name: qliksense-configs
        - name: FORTRESS_DEVICE_CREDENTIAL_ENDPOINT
          valueFrom:
            configMapKeyRef:
              key: iotCredentialUrl
              name: qliksense-configs
        - name: FORTRESS_IOT_CREDENTIAL_ENDPOINT
          value: https://$(FORTRESS_DEVICE_CREDENTIAL_ENDPOINT)
        - name: FORTRESS_REGION
          valueFrom:
            configMapKeyRef:
              key: iotAwsRegion
              name: qliksense-configs
        - name: FORTRESS_THING_CA_FILE
          value: /run/secrets/qlik.com/qliksense/iotRootCa
        - name: FORTRESS_THING_CERT_FILE
          value: /run/secrets/qlik.com/qliksense/iotFortThingCert
        - name: FORTRESS_THING_DATA_ENDPOINT
          valueFrom:
            configMapKeyRef:
              key: fortressThingDataEndpoint
              name: qliksense-configs
        - name: FORTRESS_THING_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotFortThingPrivateKey
        - name: FORTRESS_THING_NAME
          valueFrom:
            configMapKeyRef:
              key: thingName
              name: qliksense-configs
        - name: FORT_WEB_INTEGRATION_ID
          valueFrom:
            configMapKeyRef:
              key: fortWebIntegrationId
              name: qliksense-configs
        - name: FORT_TENANT_ID
          valueFrom:
            configMapKeyRef:
              key: tenantId
              name: qliksense-configs
        - name: FORT_PRIVATE_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotThingPrivateKey
        - name: FORT_IOT_PRIVATE_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotThingPrivateKey
        - name: JAEGER_DISABLED
          value: "true"
        - name: DISABLE_OTLP
          value: "true"
        image: ghcr.io/qlik-download/encryption:6.0.25
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: http
        name: encryption
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: http
        volumeMounts:
        - mountPath: /run/secrets/qlik.com/encryption
          name: encryption-secrets
          readOnly: true
        - mountPath: /etc/ssl/certs
          name: ca-certificates
        - mountPath: /run/secrets/qlik.com/qliksense
          name: qliksense-secrets
          readOnly: true
      imagePullSecrets:
      - name: artifactory-docker-secret
      volumes:
      - name: encryption-secrets
        secret:
          secretName: encryption-secrets
      - name: ca-certificates
        persistentVolumeClaim:
          claimName: ca-certificates
      - name: qliksense-secrets
        secret:
          secretName: qliksense-secrets
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
  labels:
    app: encryption
    app.kubernetes.io/component: encryption
    app.kubernetes.io/instance: encryption
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 6.0.25
    chart: encryption-6.0.25
    domain: qcs-infra
    heritage: Helm
    release: qlik-default
  name: encryption
  namespace: default
spec:
  maxReplicas: 1
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: encryption
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
    nginx.ingress.kubernetes.io/auth-response-headers: Authorization
    nginx.ingress.kubernetes.io/auth-url: http://edge-auth.default.svc.cluster.local:8080/v1/auth
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite (?i)/api/v1/(.*) /v1/$1 break;
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 250m
    nginx.org/client-max-body-size: 250m
  labels:
    app: encryption
    app.kubernetes.io/component: encryption
    app.kubernetes.io/instance: encryption
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 6.0.25
    chart: encryption-6.0.25
    domain: qcs-infra
    heritage: Helm
    release: qlik-default
  name: encryption
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - backend:
          service:
            name: encryption
            port:
              number: 8080
        path: /api/v1/encryption/keyprovider
        pathType: ImplementationSpecific
      - backend:
          service:
            name: encryption
            port:
              number: 8080
        path: /api/v1/encryption/servicetracer
        pathType: ImplementationSpecific
