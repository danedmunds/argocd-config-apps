apiVersion: v1
data:
  accessTokenPrivateKey: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1JR2tBZ0VCQkRDWlpDNEJkckdPdVhEdVFsVElzTXhYb3MvZkRoTURuWDJkZ3VvbFZ1dXZPRFpzUXEzYUJiRkgKWjhhYWVYTmhHZ0dnQndZRks0RUVBQ0toWkFOaUFBUVZVRVp1b09kWXAvejBrcktHMEw1M2k0cjZMbS9JcjFLSgpmNXZNVlJtMC96b1ZIVVZrM1FFZ1dHaFJFZFNoc2FZWkxnWkZ6MVlubGlZMlZtMUlmVnN6Z1E2U3lRbDRjUTg4ClAwOENqQnI0TFZmYXV5OE91OXFmM2hjMG5JK1ZNK3c9Ci0tLS0tRU5EIEVDIFBSSVZBVEUgS0VZLS0tLS0K
  cookiesKeys: WyJVaUw2WWVQRWNVTWsyTXFpR2sxQnVHc3FNV2ZvSHorYjFTdVgxM2xLdXZVPSJd
  loginStateKey: ckxrOWRNa3cxbm1jblJQbWErMENROHY2UEJaQVB4UWFlZW5vUVBKYzRQST0=
  mongodbUri: bW9uZ29kYjovL21vbmdvZGI6MjcwMTcvZWRnZS1hdXRoP3NzbD1mYWxzZQ==
  oauthClientMyQlikSaltedHashes: W3sic2FsdCI6IjQzYmY3OTgxZGE4MThlYmE1ZTY2YzI2MTVjMzNiNDYwY2MzOTMyNmZmYjYwNDhmMTEyOGVjMGNhOTA0YjBjMTgiLCJoYXNoIjoiNjMwZTMwOWU4Y2YxZTRhZTU0YzRjZTdmZjdlMDA5ZDY5NmZjMzE1YzFlYzM3MWJmZjExNGFhNDI4ODEzYjYzMyJ9XQ==
  redisPassword: TkdrVXAwVkRKdGMzeGl5Qw==
  refreshTokenPrivateKey: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1JR2tBZ0VCQkRBenBkcFFZMDRPejJ3K3VtTUlWSDhURk5FdGtud0x2S1gvc0x6ZFcyNGcrN3phanJuTDZyOXgKUnV6dkl5VGZSWm1nQndZRks0RUVBQ0toWkFOaUFBUWRSMHo3RncrdXVUUTgveXcrMW9MVDEvTXBpV3NvUk5nLwora2JkR0x6TXIxK0NPM3laQy8yZ3lkSy9zU2RLV3F6SE56cW8rN3hwWmlkUHAxWDVwWVA2OWFWN0FoaDJaZWJ1Ck5ZdGlUZ0x2TWhLc2toSStCTlplY2RGY2FJVjJlWWs9Ci0tLS0tRU5EIEVDIFBSSVZBVEUgS0VZLS0tLS0K
  tokenAuthPrivateKey: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1JR2tBZ0VCQkREYVNlSzNXTE9wT0c5Tnh2b2NaNUVvdC9WbzduNlE1amtrZXNzdzNXd3h3M2I3eFNDNWRXTVYKWHV0YkVXQmhaOHlnQndZRks0RUVBQ0toWkFOaUFBUnFCL25nRVpYTkRYS2lncndtOWhWNEpjSFU2RnFicmhDOQpWN2ZlaXVxUHd1dkdVUzZ0bWZKOFYxUW9yVkQ3U0ZmK3hOV0NTR2w0Q0p6aHFjN2FsOTJnRk9DZDFFbUNiY1piCjluejBWU05LRWpubDl5Q2NUM1RoZHI3NXdSUFo2em89Ci0tLS0tRU5EIEVDIFBSSVZBVEUgS0VZLS0tLS0K
kind: Secret
metadata:
  labels:
    app: edge-auth
    app.kubernetes.io/component: edge-auth
    app.kubernetes.io/instance: edge-auth
    app.kubernetes.io/name: edge-auth
    app.kubernetes.io/version: 6.23.17
    chart: edge-auth-6.23.17
    domain: authentication
    heritage: Helm
    release: edge-auth
  name: edge-auth-secrets
  namespace: default
type: Opaque
---
apiVersion: v1
data:
  apiKeysUri: http://api-keys:8080
  encryptionUri: http://encryption:8080
  featureFlagsUri: http://feature-flags:8080
  groupsUri: http://identities:8080
  identitiesUri: http://identities:8080
  identityProvidersExtUri: http://identity-providers-ext:8080
  identityProvidersUri: http://identity-providers:8080
  ingressAuthUrl: http://edge-auth.$(NAMESPACE).svc.cluster.local:8080/v1/auth
  keysUri: http://keys:8080
  licensesUri: http://licenses:9200
  logLevel: info
  natsStreamingClusterId: messaging-nats-streaming-cluster
  natsUri: http://messaging-nats-client:4222
  oauthClientsUri: http://oauth-clients:8080
  policyAdministrationsUri: http://policy-administrations:7070
  rateLimiterLimit: "1e+06"
  redirects: https://elastic.example/login/callback
  redisUri: redis://redis-master:6379
  scopesUri: http://scopes:8080
  tenantsUri: http://tenants:8080
  usersUri: http://identities:8080
kind: ConfigMap
metadata:
  labels:
    app: edge-auth
    app.kubernetes.io/component: edge-auth
    app.kubernetes.io/instance: edge-auth
    app.kubernetes.io/name: edge-auth
    app.kubernetes.io/version: 6.23.17
    chart: edge-auth-6.23.17
    domain: authentication
    heritage: Helm
    release: edge-auth
  name: edge-auth-configs
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
    prometheus.io/scrape_high_cardinality: "true"
  labels:
    app: edge-auth
    app.kubernetes.io/component: edge-auth
    app.kubernetes.io/instance: edge-auth
    app.kubernetes.io/name: edge-auth
    app.kubernetes.io/version: 6.23.17
    chart: edge-auth-6.23.17
    domain: authentication
    heritage: Helm
    release: edge-auth
  name: edge-auth
  namespace: default
spec:
  ports:
    - name: edge-auth
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: edge-auth
    release: edge-auth
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: edge-auth
    app.kubernetes.io/component: edge-auth
    app.kubernetes.io/instance: edge-auth
    app.kubernetes.io/name: edge-auth
    app.kubernetes.io/version: 6.23.17
    chart: edge-auth-6.23.17
    domain: authentication
    heritage: Helm
    release: edge-auth
  name: edge-auth
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: edge-auth
      release: edge-auth
  template:
    metadata:
      annotations:
        checksum/configs: 0606395ebec57fa7f25516da572c2c9ada3c452338a481db576b323dd25da630
        checksum/secrets: e8c14f6991736b376c8502f0532990ccc131ac7935f314d3e7c986374801cddc
      labels:
        app: edge-auth
        domain: authentication
        messaging-nats-client: "true"
        release: edge-auth
    spec:
      containers:
        - env:
            - name: NATS_CLIENT_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ACCESS_TOKEN_PRIVATE_KEY_FILE
              value: /run/secrets/qlik.com/edge-auth/accessTokenPrivateKey
            - name: COOKIES_KEYS_FILE
              value: /run/secrets/qlik.com/edge-auth/cookiesKeys
            - name: LOGIN_STATE_KEY_FILE
              value: /run/secrets/qlik.com/edge-auth/loginStateKey
            - name: REFRESH_TOKEN_PRIVATE_KEY_FILE
              value: /run/secrets/qlik.com/edge-auth/refreshTokenPrivateKey
            - name: TOKEN_AUTH_PRIVATE_KEY_FILE
              value: /run/secrets/qlik.com/edge-auth/tokenAuthPrivateKey
            - name: OAUTH_CLIENT_MY_QLIK_SALTED_HASHES_FILE
              value: /run/secrets/qlik.com/edge-auth/oauthClientMyQlikSaltedHashes
            - name: API_KEYS_URI
              valueFrom:
                configMapKeyRef:
                  key: apiKeysUri
                  name: edge-auth-configs
            - name: ENCRYPTION_URI
              valueFrom:
                configMapKeyRef:
                  key: encryptionUri
                  name: edge-auth-configs
            - name: FEATURE_FLAGS_URI
              valueFrom:
                configMapKeyRef:
                  key: featureFlagsUri
                  name: edge-auth-configs
            - name: GROUPS_URI
              valueFrom:
                configMapKeyRef:
                  key: groupsUri
                  name: edge-auth-configs
            - name: IDENTITIES_URI
              valueFrom:
                configMapKeyRef:
                  key: identitiesUri
                  name: edge-auth-configs
            - name: IDENTITY_PROVIDERS_EXT_URI
              valueFrom:
                configMapKeyRef:
                  key: identityProvidersExtUri
                  name: edge-auth-configs
            - name: IDENTITY_PROVIDERS_URI
              valueFrom:
                configMapKeyRef:
                  key: identityProvidersUri
                  name: edge-auth-configs
            - name: INGRESS_AUTH_URL
              valueFrom:
                configMapKeyRef:
                  key: ingressAuthUrl
                  name: edge-auth-configs
            - name: KEYS_URI
              valueFrom:
                configMapKeyRef:
                  key: keysUri
                  name: edge-auth-configs
            - name: LICENSES_URI
              valueFrom:
                configMapKeyRef:
                  key: licensesUri
                  name: edge-auth-configs
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: logLevel
                  name: edge-auth-configs
            - name: NATS_STREAMING_CLUSTER_ID
              valueFrom:
                configMapKeyRef:
                  key: natsStreamingClusterId
                  name: edge-auth-configs
            - name: NATS_URI
              valueFrom:
                configMapKeyRef:
                  key: natsUri
                  name: edge-auth-configs
            - name: OAUTH_CLIENTS_URI
              valueFrom:
                configMapKeyRef:
                  key: oauthClientsUri
                  name: edge-auth-configs
            - name: POLICY_ADMINISTRATIONS_URI
              valueFrom:
                configMapKeyRef:
                  key: policyAdministrationsUri
                  name: edge-auth-configs
            - name: RATE_LIMITER_LIMIT
              valueFrom:
                configMapKeyRef:
                  key: rateLimiterLimit
                  name: edge-auth-configs
            - name: REDIS_URI
              valueFrom:
                configMapKeyRef:
                  key: redisUri
                  name: edge-auth-configs
            - name: SCOPES_URI
              valueFrom:
                configMapKeyRef:
                  key: scopesUri
                  name: edge-auth-configs
            - name: TENANTS_URI
              valueFrom:
                configMapKeyRef:
                  key: tenantsUri
                  name: edge-auth-configs
            - name: USERS_URI
              valueFrom:
                configMapKeyRef:
                  key: usersUri
                  name: edge-auth-configs
            - name: ACTIVE_SESSION_RELOGIN_ENABLED
              value: "true"
            - name: DISABLE_OTLP
              value: "true"
            - name: GLOBAL_AGENT_FORCE_GLOBAL_AGENT
              value: "true"
            - name: GLOBAL_AGENT_HTTPS_PROXY
              value: $(HTTPS_PROXY)
            - name: GLOBAL_AGENT_HTTP_PROXY
              value: $(HTTP_PROXY)
            - name: GLOBAL_AGENT_NO_PROXY
              value: $(NO_PROXY)
            - name: JAEGER_DISABLED
              value: "true"
            - name: CACHE_MAX_AGE
              value: "7.2e+06"
            - name: CACHE_MAX_SIZE
              value: "250"
            - name: CACHE_REDIS_ENABLED
              value: "true"
            - name: CACHE_STORES_FEATURES
              value: redis
            - name: CACHE_STORES_IDENTITIES
              value: redis
            - name: CACHE_STORES_KEYS
              value: redis
            - name: CACHE_STORES_LICENSES
              value: redis
            - name: CACHE_STORES_OAUTH_CLIENTS
              value: redis
            - name: CACHE_STORES_SESSIONS
              value: redis
            - name: CACHE_STORES_TENANTS
              value: redis
            - name: CACHE_STORES_USERS
              value: redis
            - name: ENFORCE_TLS
              value: "true"
            - name: ENVIRONMENT
              value: qseok
            - name: MONGO_CHECK_SERVER_IDENTITY
              value: ""
            - name: MONGO_SSL
              value: ""
            - name: MONGO_SSL_VALIDATE
              value: ""
            - name: NATS_ENABLED
              value: "true"
            - name: NATS_SUBSCRIPTIONS_GROUPS_MANUAL_ACKS
              value: "true"
            - name: NATS_SUBSCRIPTIONS_GROUPS_QUEUE_GROUP
              value: edge-auth.groups
            - name: NATS_SUBSCRIPTIONS_LICENSES_MANUAL_ACKS
              value: "true"
            - name: NATS_SUBSCRIPTIONS_LICENSES_QUEUE_GROUP
              value: edge-auth.licenses
            - name: NATS_SUBSCRIPTIONS_OAUTH_CLIENTS_MANUAL_ACKS
              value: "true"
            - name: NATS_SUBSCRIPTIONS_OAUTH_CLIENTS_QUEUE_GROUP
              value: edge-auth.oauthClients
            - name: NATS_SUBSCRIPTIONS_TENANTS_MANUAL_ACKS
              value: "true"
            - name: NATS_SUBSCRIPTIONS_TENANTS_QUEUE_GROUP
              value: edge-auth.tenants
            - name: NATS_SUBSCRIPTIONS_USERS_MANUAL_ACKS
              value: "true"
            - name: NATS_SUBSCRIPTIONS_USERS_QUEUE_GROUP
              value: edge-auth.users
            - name: REGION
              value: example
            - name: SECURE_COOKIES
              value: "true"
            - name: SESSION_MAX_LIFETIME
              value: "86400"
            - name: SESSION_TTL
              value: "1800"
            - name: STATE_LIFETIME
              value: 7 days
            - name: TERMINATION_GRACE_PERIOD_SECONDS
              value: "30"
            - name: JAEGER_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTLP_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: HTTP_PROXY
              valueFrom:
                configMapKeyRef:
                  key: httpProxy
                  name: qliksense-configs
            - name: HTTPS_PROXY
              valueFrom:
                configMapKeyRef:
                  key: httpsProxy
                  name: qliksense-configs
            - name: NO_PROXY
              valueFrom:
                configMapKeyRef:
                  key: noProxy
                  name: qliksense-configs
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  key: mongodbUri
                  name: qliksense-secrets
            - name: MONGODB_URI_FILE
              value: /run/secrets/qlik.com/qliksense/mongodbUri
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: redisPassword
                  name: qliksense-secrets
            - name: REDIS_PASSWORD_FILE
              value: /run/secrets/qlik.com/qliksense/redisPassword
          image: ghcr.io/qlik-download/edge-auth:6.23.17
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /live
              port: http
          name: edge-auth
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ready
              port: http
          volumeMounts:
            - mountPath: /run/secrets/qlik.com/edge-auth
              name: edge-auth-secrets
              readOnly: true
            - mountPath: /etc/ssl/certs
              name: ca-certificates
            - mountPath: /run/secrets/qlik.com/qliksense
              name: qliksense-secrets
      dnsConfig:
        options:
          - name: timeout
            value: "1"
      hostAliases:
        - hostnames:
            - elastic.example
          ip: 127.0.0.1
      imagePullSecrets:
        - name: artifactory-docker-secret
      terminationGracePeriodSeconds: 30
      volumes:
        - name: edge-auth-secrets
          secret:
            secretName: edge-auth-secrets
        - name: ca-certificates
          persistentVolumeClaim:
            claimName: ca-certificates
        - name: qliksense-secrets
          secret:
            secretName: qliksense-secrets
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/configuration-snippet: |
      set $host_and_uri $http_host$request_uri;
      if ( $host_and_uri ~* "^.{2049,}$" ) { return 414; }
      more_clear_input_headers "X-Forwarded-Host" "X-Forwarded-For" "X-Forwarded-Proto" "X-Original-URI" "X-Original-URL";
      more_set_headers 'Access-Control-Allow-Origin: $http_origin';
    nginx.ingress.kubernetes.io/enable-cors: "true"
  labels:
    app: edge-auth
    app.kubernetes.io/component: edge-auth
    app.kubernetes.io/instance: edge-auth
    app.kubernetes.io/name: edge-auth
    app.kubernetes.io/version: 6.23.17
    chart: edge-auth-6.23.17
    domain: authentication
    heritage: Helm
    release: edge-auth
  name: edge-auth
  namespace: default
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - backend:
              service:
                name: edge-auth
                port:
                  number: 8080
            path: /logout
            pathType: ImplementationSpecific
          - backend:
              service:
                name: edge-auth
                port:
                  number: 8080
            path: /oauth
            pathType: ImplementationSpecific
          - backend:
              service:
                name: edge-auth
                port:
                  number: 8080
            path: /.well-known/openid-configuration
            pathType: ImplementationSpecific
          - backend:
              service:
                name: edge-auth
                port:
                  number: 8080
            path: /.well-known/oauth-authorization-server
            pathType: ImplementationSpecific
          - backend:
              service:
                name: edge-auth
                port:
                  number: 8080
            path: /.well-known/jwks.json
            pathType: ImplementationSpecific
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/configuration-snippet: |
      set $host_and_uri $http_host$request_uri;
      if ( $host_and_uri ~* "^.{2049,}$" ) { return 414; }
      more_clear_input_headers "X-Forwarded-Host" "X-Forwarded-For" "X-Forwarded-Proto" "X-Original-URI" "X-Original-URL";
      more_set_headers 'Access-Control-Allow-Origin: $http_origin';
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
  labels:
    app: edge-auth
    app.kubernetes.io/component: edge-auth
    app.kubernetes.io/instance: edge-auth
    app.kubernetes.io/name: edge-auth
    app.kubernetes.io/version: 6.23.17
    chart: edge-auth-6.23.17
    domain: authentication
    heritage: Helm
    release: edge-auth
  name: edge-auth-login
  namespace: default
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - backend:
              service:
                name: edge-auth
                port:
                  number: 8080
            path: /login
            pathType: ImplementationSpecific
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/auth-response-headers: Authorization
    nginx.ingress.kubernetes.io/auth-url: http://edge-auth.$(NAMESPACE).svc.cluster.local:8080/v1/auth
    nginx.ingress.kubernetes.io/configuration-snippet: |
      set $host_and_uri $http_host$request_uri;
      if ( $host_and_uri ~* "^.{2049,}$" ) { return 414; }
      rewrite (?i)/api/(.*) /$1 break;
      more_clear_input_headers "X-Forwarded-Host" "X-Forwarded-For" "X-Forwarded-Proto" "X-Original-URI" "X-Original-URL";
    nginx.ingress.kubernetes.io/enable-cors: "true"
  labels:
    app: edge-auth
    app.kubernetes.io/component: edge-auth
    app.kubernetes.io/instance: edge-auth
    app.kubernetes.io/name: edge-auth
    app.kubernetes.io/version: 6.23.17
    chart: edge-auth-6.23.17
    domain: authentication
    heritage: Helm
    release: edge-auth
  name: edge-auth-api
  namespace: default
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - backend:
              service:
                name: edge-auth
                port:
                  number: 8080
            path: /api/v1/diagnose-claims
            pathType: ImplementationSpecific
          - backend:
              service:
                name: edge-auth
                port:
                  number: 8080
            path: /api/v1/csrf-token
            pathType: ImplementationSpecific
          - backend:
              service:
                name: edge-auth
                port:
                  number: 8080
            path: /api/v1/oauth-tokens
            pathType: ImplementationSpecific
          - backend:
              service:
                name: edge-auth
                port:
                  number: 8080
            path: /api/v1/claims/me
            pathType: ImplementationSpecific
