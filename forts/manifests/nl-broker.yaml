apiVersion: v1
data:
  mongodbUri: bW9uZ29kYjovL21vbmdvZGI6MjcwMTcvbmwtYnJva2VyP3NzbD1mYWxzZQ==
  tokenAuthPrivateKey: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1JR2tBZ0VCQkRBU2c5RThyTG91RWxmTTRIcGJKM25zUldNVXJtYmJZOGVTeHkwYXFlaHlCMFlrZEhrRUlvTDMKd3Vtc0ZCWkNvRnlnQndZRks0RUVBQ0toWkFOaUFBVDFRUkNMU05KaXdHY0hoWm44b1cvMnRhWE1XRTN4WS9IRwpMczV3THB4MzdKMUNHaHFEVG5iR2lJMnZWWWRsMnVrY2lod2tHK1MvVTQ3bkFuWEZCTVdBNEFjUFhaWGtBN28rCmJldm5lSGxrWDNVME0vcGkrY0FXb09ObVIvWmtybG89Ci0tLS0tRU5EIEVDIFBSSVZBVEUgS0VZLS0tLS0K
  tokenAuthPrivateKeyId: ZGQzNUdjWE1YYjVNZVRqSWUydGp3VURjbWwtLWdYR3RHQWxSV2dTejNobw==
kind: Secret
metadata:
  labels:
    app: nl-broker
    app.kubernetes.io/component: nl-broker
    app.kubernetes.io/instance: nl-broker
    app.kubernetes.io/name: nl-broker
    app.kubernetes.io/version: 3.84.0
    chart: nl-broker-3.84.0
    domain: nlp-cognitive
    heritage: Helm
    release: nl-broker
  name: nl-broker-secrets
  namespace: default
type: Opaque
---
apiVersion: v1
data:
  accessControlsUri: http://nl-broker-access-controls:5080
  collectionsUri: http://nl-broker-collections:8080
  dataPrepUri: http://data-prep:9072
  edgeAuthUri: http://nl-broker-edge-auth:8080
  encryptionUri: http://nl-broker-encryption:8080
  featureFlagsUri: http://feature-flags:8080
  ingressAuthUrl: http://edge-auth.$(NAMESPACE).svc.cluster.local:8080/v1/auth
  keysUri: http://keys:8080
  natsEnabled: "true"
  natsStreamingClusterId: messaging-nats-streaming-cluster
  natsUri: http://messaging-nats-client:4222
  nlAppSearchUri: http://nl-app-search:9085
  nlParserUri: http://nl-parser:30302
  qixSessionsUri: http://qix-sessions:8080
  reportingUri: http://reporting:8282
  temporaryContentsUri: http://nl-broker-temporary-contents:6080
kind: ConfigMap
metadata:
  labels:
    app: nl-broker
    app.kubernetes.io/component: nl-broker
    app.kubernetes.io/instance: nl-broker
    app.kubernetes.io/name: nl-broker
    app.kubernetes.io/version: 3.84.0
    chart: nl-broker-3.84.0
    domain: nlp-cognitive
    heritage: Helm
    release: nl-broker
  name: nl-broker-configs
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "30301"
    prometheus.io/scrape: "true"
  labels:
    app: nl-broker
    app.kubernetes.io/component: nl-broker
    app.kubernetes.io/instance: nl-broker
    app.kubernetes.io/name: nl-broker
    app.kubernetes.io/version: 3.84.0
    chart: nl-broker-3.84.0
    domain: nlp-cognitive
    heritage: Helm
    release: nl-broker
  name: nl-broker
  namespace: default
spec:
  ports:
    - name: nl-broker
      port: 30301
      protocol: TCP
      targetPort: 30301
  selector:
    app: nl-broker
    release: nl-broker
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nl-broker
    app.kubernetes.io/component: nl-broker
    app.kubernetes.io/instance: nl-broker
    app.kubernetes.io/name: nl-broker
    app.kubernetes.io/version: 3.84.0
    chart: nl-broker-3.84.0
    domain: nlp-cognitive
    heritage: Helm
    release: nl-broker
  name: nl-broker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nl-broker
      release: nl-broker
  template:
    metadata:
      annotations:
        checksum/configs: 19dabcd9613804106c9f58496d0ddfdfd80f9b9a7367541d949d190c8a9ff879
        checksum/secrets: a75ad2bd4734c8046038bfeaa42ebcd051c404a2d00e82bb39f62212dabf186c
      labels:
        app: nl-broker
        domain: nlp-cognitive
        messaging-nats-client: "true"
        release: nl-broker
    spec:
      containers:
        - env:
            - name: NATS_CLIENT_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: TOKEN_AUTH_PRIVATE_KEY_FILE
              value: /run/secrets/qlik.com/nl-broker/tokenAuthPrivateKey
            - name: TOKEN_AUTH_PRIVATE_KEY_ID_FILE
              value: /run/secrets/qlik.com/nl-broker/tokenAuthPrivateKeyId
            - name: ACCESS_CONTROLS_URI
              valueFrom:
                configMapKeyRef:
                  key: accessControlsUri
                  name: nl-broker-configs
            - name: COLLECTIONS_URI
              valueFrom:
                configMapKeyRef:
                  key: collectionsUri
                  name: nl-broker-configs
            - name: DATA_PREP_URI
              valueFrom:
                configMapKeyRef:
                  key: dataPrepUri
                  name: nl-broker-configs
            - name: EDGE_AUTH_URI
              valueFrom:
                configMapKeyRef:
                  key: edgeAuthUri
                  name: nl-broker-configs
            - name: ENCRYPTION_URI
              valueFrom:
                configMapKeyRef:
                  key: encryptionUri
                  name: nl-broker-configs
            - name: FEATURE_FLAGS_URI
              valueFrom:
                configMapKeyRef:
                  key: featureFlagsUri
                  name: nl-broker-configs
            - name: INGRESS_AUTH_URL
              valueFrom:
                configMapKeyRef:
                  key: ingressAuthUrl
                  name: nl-broker-configs
            - name: KEYS_URI
              valueFrom:
                configMapKeyRef:
                  key: keysUri
                  name: nl-broker-configs
            - name: NATS_ENABLED
              valueFrom:
                configMapKeyRef:
                  key: natsEnabled
                  name: nl-broker-configs
            - name: NATS_STREAMING_CLUSTER_ID
              valueFrom:
                configMapKeyRef:
                  key: natsStreamingClusterId
                  name: nl-broker-configs
            - name: NATS_URI
              valueFrom:
                configMapKeyRef:
                  key: natsUri
                  name: nl-broker-configs
            - name: NL_APP_SEARCH_URI
              valueFrom:
                configMapKeyRef:
                  key: nlAppSearchUri
                  name: nl-broker-configs
            - name: NL_PARSER_URI
              valueFrom:
                configMapKeyRef:
                  key: nlParserUri
                  name: nl-broker-configs
            - name: QIX_SESSIONS_URI
              valueFrom:
                configMapKeyRef:
                  key: qixSessionsUri
                  name: nl-broker-configs
            - name: REPORTING_URI
              valueFrom:
                configMapKeyRef:
                  key: reportingUri
                  name: nl-broker-configs
            - name: TEMPORARY_CONTENTS_URI
              valueFrom:
                configMapKeyRef:
                  key: temporaryContentsUri
                  name: nl-broker-configs
            - name: DISABLE_OTLP
              value: "true"
            - name: JAEGER_DISABLED
              value: "true"
            - name: DPS_ROUTING
              value: "false"
            - name: JAEGER_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTLP_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: HTTP_PROXY
              valueFrom:
                configMapKeyRef:
                  key: httpProxy
                  name: qliksense-configs
            - name: HTTPS_PROXY
              valueFrom:
                configMapKeyRef:
                  key: httpsProxy
                  name: qliksense-configs
            - name: NO_PROXY
              valueFrom:
                configMapKeyRef:
                  key: noProxy
                  name: qliksense-configs
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  key: mongodbUri
                  name: qliksense-secrets
            - name: MONGODB_URI_FILE
              value: /run/secrets/qlik.com/qliksense/mongodbUri
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: redisPassword
                  name: qliksense-secrets
            - name: REDIS_PASSWORD_FILE
              value: /run/secrets/qlik.com/qliksense/redisPassword
          image: ghcr.io/qlik-download/nl-broker:3.84.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: nl-broker
          ports:
            - containerPort: 30301
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: /run/secrets/qlik.com/nl-broker
              name: nl-broker-secrets
              readOnly: true
            - mountPath: /etc/ssl/certs
              name: ca-certificates
            - mountPath: /run/secrets/qlik.com/qliksense
              name: qliksense-secrets
      imagePullSecrets:
        - name: artifactory-docker-secret
      volumes:
        - name: nl-broker-secrets
          secret:
            secretName: nl-broker-secrets
        - name: ca-certificates
          persistentVolumeClaim:
            claimName: ca-certificates
        - name: qliksense-secrets
          secret:
            secretName: qliksense-secrets
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/auth-response-headers: Authorization
    nginx.ingress.kubernetes.io/auth-url: http://edge-auth.$(NAMESPACE).svc.cluster.local:8080/v1/auth
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite (?i)/api/(.*) /$1 break;
  labels:
    app: nl-broker
    app.kubernetes.io/component: nl-broker
    app.kubernetes.io/instance: nl-broker
    app.kubernetes.io/name: nl-broker
    app.kubernetes.io/version: 3.84.0
    chart: nl-broker-3.84.0
    domain: nlp-cognitive
    heritage: Helm
    release: nl-broker
  name: nl-broker
  namespace: default
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - backend:
              service:
                name: nl-broker
                port:
                  number: 30301
            path: /api/v1/sentences
            pathType: ImplementationSpecific
          - backend:
              service:
                name: nl-broker
                port:
                  number: 30301
            path: /api/v1/narrative
            pathType: ImplementationSpecific
          - backend:
              service:
                name: nl-broker
                port:
                  number: 30301
            path: /api/v1/nl/query
            pathType: ImplementationSpecific
          - backend:
              service:
                name: nl-broker
                port:
                  number: 30301
            path: /api/v1/questions/actions/ask
            pathType: ImplementationSpecific
          - backend:
              service:
                name: nl-broker
                port:
                  number: 30301
            path: /api/v1/nlmetrics
            pathType: ImplementationSpecific
          - backend:
              service:
                name: nl-broker
                port:
                  number: 30301
            path: /api/v1/nlsettings
            pathType: ImplementationSpecific
