apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app: geo-operations
    app.kubernetes.io/component: geo-operations
    app.kubernetes.io/instance: geo-operations
    app.kubernetes.io/name: geo-operations
    app.kubernetes.io/version: 2.25.0
    chart: geo-operations-2.25.0
    heritage: Helm
    release: geo-operations
  name: geo-operations
  namespace: default
spec:
  egress:
    - ports:
        - port: 53
          protocol: UDP
        - port: 53
          protocol: TCP
    - ports:
        - port: 9026
          protocol: TCP
      to:
        - namespaceSelector:
            matchLabels:
              name: default
          podSelector:
            matchLabels:
              app: dcaas
              release: geo-operations
    - ports:
        - port: 8080
          protocol: TCP
      to:
        - namespaceSelector:
            matchLabels:
              name: default
          podSelector:
            matchLabels:
              app: edge-auth
              release: geo-operations
    - ports:
        - port: 8080
          protocol: TCP
      to:
        - namespaceSelector:
            matchLabels:
              name: default
          podSelector:
            matchLabels:
              app: feature-flags
              release: geo-operations
    - ports:
        - port: 9200
          protocol: TCP
      to:
        - namespaceSelector:
            matchLabels:
              name: default
          podSelector:
            matchLabels:
              app: licenses
              release: geo-operations
    - ports:
        - port: 55680
          protocol: TCP
      to:
        - namespaceSelector:
            matchLabels:
              name: default
          podSelector:
            matchLabels:
              app: opentelemetry
              component: otel-agent
              release: tracing
  ingress:
    - {}
  podSelector:
    matchLabels:
      app: geo-operations
      release: geo-operations
  policyTypes:
    - Egress
    - Ingress
---
apiVersion: v1
data:
  tokenAuthPrivateKey: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JRzJBZ0VBTUJBR0J5cUdTTTQ5QWdFR0JTdUJCQUFpQklHZU1JR2JBZ0VCQkREdDVJeEh1b2Y3YmRpNFRUMy8KeDFLQzJ0UEpQSFFsM20rU3FubDRTM0h1bVZ0ZnJIUHBNVVlETy85ZTZhZmdheXVoWkFOaUFBVEtsdGIwQVJsMQpnNDg0VW1HdFJUTllaTVM0K3BQU3M1ak5JL1p0SnJiNGhJcTRsNmZibHdJeERadk1sTTVha3ljYjdnTm81WmN3Cm96cFpiKzUrQ2VGLzV3TWFseUswYStWWk9HQ1o4MHRTeHVBN2NCNnJ3QU9hTzNZaG1vbGt2NFk9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
  tokenAuthPrivateKeyId: TjBJM3JvRVZvaDF1dFNiMUpGa3FrbGFoUlhtR2lrcThGSWt4TEx1RXBjVQ==
kind: Secret
metadata:
  labels:
    app: geo-operations
    app.kubernetes.io/component: geo-operations
    app.kubernetes.io/instance: geo-operations
    app.kubernetes.io/name: geo-operations
    app.kubernetes.io/version: 2.25.0
    chart: geo-operations-2.25.0
    heritage: Helm
    release: geo-operations
  name: geo-operations-secrets
  namespace: default
type: Opaque
---
apiVersion: v1
data:
  dcaasUri: http://dcaas:9026
  edgeAuthUri: http://edge-auth:8080
  featureFlagsUri: http://feature-flags:8080
  geoAnalyticsServerKey: ""
  geoAnalyticsServerUrl: https://ga.qlikcloud.com
  licensesUri: http://licenses:9200
  logLevel: info
  maxDatasetBytes: ""
  maxDatasetRows: ""
kind: ConfigMap
metadata:
  labels:
    app: geo-operations
    app.kubernetes.io/component: geo-operations
    app.kubernetes.io/instance: geo-operations
    app.kubernetes.io/name: geo-operations
    app.kubernetes.io/version: 2.25.0
    chart: geo-operations-2.25.0
    heritage: Helm
    release: geo-operations
  name: geo-operations-configs
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "40072"
    prometheus.io/scrape: "true"
  labels:
    app: geo-operations
    app.kubernetes.io/component: geo-operations
    app.kubernetes.io/instance: geo-operations
    app.kubernetes.io/name: geo-operations
    app.kubernetes.io/version: 2.25.0
    chart: geo-operations-2.25.0
    heritage: Helm
    release: geo-operations
  name: geo-operations
  namespace: default
spec:
  ports:
    - name: grpc
      port: 50072
      protocol: TCP
      targetPort: 50072
    - name: http
      port: 40072
      protocol: TCP
      targetPort: 40072
  selector:
    app: geo-operations
    release: geo-operations
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: geo-operations
    app.kubernetes.io/component: geo-operations
    app.kubernetes.io/instance: geo-operations
    app.kubernetes.io/name: geo-operations
    app.kubernetes.io/version: 2.25.0
    chart: geo-operations-2.25.0
    heritage: Helm
    release: geo-operations
  name: geo-operations
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: geo-operations
      release: geo-operations
  template:
    metadata:
      annotations:
        checksum/configs: 4105ae2850f12e24f5141d523fdf49b2f958693eb590b536ddcb891b318ee2de
        checksum/secrets: dd3be74110857144e6e71d221aa6a69aa0fb1e7b50452c680d188dec3b75e08f
      labels:
        app: geo-operations
        release: geo-operations
    spec:
      containers:
        - env:
            - name: TOKEN_AUTH_PRIVATE_KEY_FILE
              value: /run/secrets/qlik.com/geo-operations/tokenAuthPrivateKey
            - name: TOKEN_AUTH_PRIVATE_KEY_ID_FILE
              value: /run/secrets/qlik.com/geo-operations/tokenAuthPrivateKeyId
            - name: DCAAS_URI
              valueFrom:
                configMapKeyRef:
                  key: dcaasUri
                  name: geo-operations-configs
            - name: EDGE_AUTH_URI
              valueFrom:
                configMapKeyRef:
                  key: edgeAuthUri
                  name: geo-operations-configs
            - name: FEATURE_FLAGS_URI
              valueFrom:
                configMapKeyRef:
                  key: featureFlagsUri
                  name: geo-operations-configs
            - name: GEO_ANALYTICS_SERVER_KEY
              valueFrom:
                configMapKeyRef:
                  key: geoAnalyticsServerKey
                  name: geo-operations-configs
            - name: GEO_ANALYTICS_SERVER_URL
              valueFrom:
                configMapKeyRef:
                  key: geoAnalyticsServerUrl
                  name: geo-operations-configs
            - name: LICENSES_URI
              valueFrom:
                configMapKeyRef:
                  key: licensesUri
                  name: geo-operations-configs
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: logLevel
                  name: geo-operations-configs
            - name: MAX_DATASET_BYTES
              valueFrom:
                configMapKeyRef:
                  key: maxDatasetBytes
                  name: geo-operations-configs
            - name: MAX_DATASET_ROWS
              valueFrom:
                configMapKeyRef:
                  key: maxDatasetRows
                  name: geo-operations-configs
            - name: DISABLE_OTLP
              value: "true"
            - name: JAEGER_DISABLED
              value: "true"
            - name: LICENSES_KEY_ID
              value: KEY4
            - name: THROTTLING_ENABLED
              value: "true"
            - name: THROTTLING_MAX_CONCURRENT
              value: "3"
            - name: THROTTLING_QUEUE_LIMIT
              value: "5"
            - name: THROTTLING_TIMEOUT
              value: "180000"
            - name: JAEGER_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTLP_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: HTTP_PROXY
              valueFrom:
                configMapKeyRef:
                  key: httpProxy
                  name: qliksense-configs
            - name: HTTPS_PROXY
              valueFrom:
                configMapKeyRef:
                  key: httpsProxy
                  name: qliksense-configs
            - name: NO_PROXY
              valueFrom:
                configMapKeyRef:
                  key: noProxy
                  name: qliksense-configs
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  key: mongodbUri
                  name: qliksense-secrets
            - name: MONGODB_URI_FILE
              value: /run/secrets/qlik.com/qliksense/mongodbUri
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: redisPassword
                  name: qliksense-secrets
            - name: REDIS_PASSWORD_FILE
              value: /run/secrets/qlik.com/qliksense/redisPassword
          image: ghcr.io/qlik-download/geo-operations-service:2.25.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /health
              port: 40072
          name: geo-operations
          ports:
            - containerPort: 40072
          readinessProbe:
            httpGet:
              path: /ready
              port: 40072
          volumeMounts:
            - mountPath: /run/secrets/qlik.com/geo-operations
              name: geo-operations-secrets
              readOnly: true
            - mountPath: /etc/ssl/certs
              name: ca-certificates
            - mountPath: /run/secrets/qlik.com/qliksense
              name: qliksense-secrets
      imagePullSecrets:
        - name: artifactory-docker-secret
      volumes:
        - name: geo-operations-secrets
          secret:
            secretName: geo-operations-secrets
        - name: ca-certificates
          persistentVolumeClaim:
            claimName: ca-certificates
        - name: qliksense-secrets
          secret:
            secretName: qliksense-secrets
