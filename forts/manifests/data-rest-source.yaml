apiVersion: v1
data:
  ingressAuthUrl: http://edge-auth.$(NAMESPACE).svc.cluster.local:8080/v1/auth
  logLevel: debug
kind: ConfigMap
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
  labels:
    app: data-rest-source
    app.kubernetes.io/component: data-rest-source
    app.kubernetes.io/instance: data-rest-source
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 2.0.11
    chart: data-rest-source-2.0.11
    domain: data-connectors
    heritage: Helm
    release: qlik-default
  name: data-rest-source-configs
  namespace: default
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
  labels:
    app: data-rest-source
    app.kubernetes.io/component: data-rest-source
    app.kubernetes.io/instance: data-rest-source
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 2.0.11
    chart: data-rest-source-2.0.11
    domain: data-connectors
    heritage: Helm
    release: qlik-default
  name: data-rest-source-secrets
  namespace: default
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app: data-rest-source
    app.kubernetes.io/component: data-rest-source
    app.kubernetes.io/instance: data-rest-source
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 2.0.11
    chart: data-rest-source-2.0.11
    domain: data-connectors
    heritage: Helm
    release: qlik-default
  name: data-rest-source
  namespace: default
spec:
  ports:
  - name: data-rest-source
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: data-rest-source
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    release: qlik-default
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
  labels:
    app: data-rest-source
    app.kubernetes.io/component: data-rest-source
    app.kubernetes.io/instance: data-rest-source
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 2.0.11
    chart: data-rest-source-2.0.11
    domain: data-connectors
    heritage: Helm
    release: qlik-default
  name: data-rest-source
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: data-rest-source
      app.kubernetes.io/name: qliksense
      app.kubernetes.io/part-of: qliksense
      release: qlik-default
  template:
    metadata:
      annotations:
        app.kubernetes.io/name: data-rest-source
        checksum/configs: 0cb30849cb5efb698e9d4e05562a767b031347587f838e7c6ab6d394b52711ae
        checksum/secrets: f33bc9568d29b0bc02643ba6ffaff0f37fb408540ed4477c5baa5da8012df404
      labels:
        app: data-rest-source
        app.kubernetes.io/name: qliksense
        app.kubernetes.io/part-of: qliksense
        domain: data-connectors
        release: qlik-default
    spec:
      containers:
      - env:
        - name: INGRESS_AUTH_URL
          valueFrom:
            configMapKeyRef:
              key: ingressAuthUrl
              name: data-rest-source-configs
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              key: logLevel
              name: data-rest-source-configs
        - name: HOST_PORT
          value: "8080"
        - name: PROMETHEUS_PORT
          value: "8080"
        - name: TERMINATION_GRACE_PERIOD_SECONDS
          value: "30"
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: OTLP_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: HTTP_PROXY
          valueFrom:
            configMapKeyRef:
              key: httpProxy
              name: qliksense-configs
        - name: HTTPS_PROXY
          valueFrom:
            configMapKeyRef:
              key: httpsProxy
              name: qliksense-configs
        - name: NO_PROXY
          valueFrom:
            configMapKeyRef:
              key: noProxy
              name: qliksense-configs
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              key: mongodbUri
              name: qliksense-secrets
        - name: MONGODB_URI_FILE
          value: /run/secrets/qlik.com/qliksense/mongodbUri
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redisPassword
              name: qliksense-secrets
        - name: REDIS_PASSWORD_FILE
          value: /run/secrets/qlik.com/qliksense/redisPassword
        - name: REDIS_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              key: redisEncryptionKey
              name: qliksense-secrets
        - name: REDIS_ENCRYPTION_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/redisEncryptionKey
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              key: minioRootUser
              name: qliksense-secrets
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: minioRootPassword
              name: qliksense-secrets
        - name: FORT_ID
          valueFrom:
            configMapKeyRef:
              key: fortId
              name: qliksense-configs
        - name: FORT_IOT_CERTIFICATE_ID
          valueFrom:
            configMapKeyRef:
              key: fortIotCertificateId
              name: qliksense-configs
        - name: FORT_IOT_THING_NAME
          valueFrom:
            configMapKeyRef:
              key: fortressId
              name: qliksense-configs
        - name: FORT_NAME
          valueFrom:
            configMapKeyRef:
              key: fortName
              name: qliksense-configs
        - name: FORT_ORIGIN_URL
          valueFrom:
            configMapKeyRef:
              key: fortOriginUrl
              name: qliksense-configs
        - name: FORT_TENANT_URL
          valueFrom:
            configMapKeyRef:
              key: fortTenantUrl
              name: qliksense-configs
        - name: FORTRESS_IOT_THING_ROLE_ALIAS_NAME
          valueFrom:
            configMapKeyRef:
              key: iotThingRoleAliasName
              name: qliksense-configs
        - name: FORTRESS_ID
          valueFrom:
            configMapKeyRef:
              key: fortressId
              name: qliksense-configs
        - name: FORTRESS_DEVICE_CREDENTIAL_ENDPOINT
          valueFrom:
            configMapKeyRef:
              key: iotCredentialUrl
              name: qliksense-configs
        - name: FORTRESS_IOT_CREDENTIAL_ENDPOINT
          value: https://$(FORTRESS_DEVICE_CREDENTIAL_ENDPOINT)
        - name: FORTRESS_REGION
          valueFrom:
            configMapKeyRef:
              key: iotAwsRegion
              name: qliksense-configs
        - name: FORTRESS_THING_CA_FILE
          value: /run/secrets/qlik.com/qliksense/iotRootCa
        - name: FORTRESS_THING_CERT_FILE
          value: /run/secrets/qlik.com/qliksense/iotFortThingCert
        - name: FORTRESS_THING_DATA_ENDPOINT
          valueFrom:
            configMapKeyRef:
              key: fortressThingDataEndpoint
              name: qliksense-configs
        - name: FORTRESS_THING_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotFortThingPrivateKey
        - name: FORTRESS_THING_NAME
          valueFrom:
            configMapKeyRef:
              key: thingName
              name: qliksense-configs
        - name: FORT_WEB_INTEGRATION_ID
          valueFrom:
            configMapKeyRef:
              key: fortWebIntegrationId
              name: qliksense-configs
        - name: FORT_TENANT_ID
          valueFrom:
            configMapKeyRef:
              key: tenantId
              name: qliksense-configs
        - name: FORT_PRIVATE_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotThingPrivateKey
        - name: FORT_IOT_PRIVATE_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotThingPrivateKey
        - name: JAEGER_DISABLED
          value: "true"
        - name: DISABLE_OTLP
          value: "true"
        image: ghcr.io/qlik-download/data-rest-source:2.0.11
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: http
        name: data-rest-source
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/ssl/certs
          name: ca-certificates
        - mountPath: /run/secrets/qlik.com/qliksense
          name: qliksense-secrets
          readOnly: true
      imagePullSecrets:
      - name: artifactory-docker-secret
      terminationGracePeriodSeconds: 30
      volumes:
      - name: data-rest-source-secrets
        secret:
          secretName: data-rest-source-secrets
      - name: ca-certificates
        persistentVolumeClaim:
          claimName: ca-certificates
      - name: qliksense-secrets
        secret:
          secretName: qliksense-secrets
