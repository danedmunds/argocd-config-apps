apiVersion: v1
data:
  accessControlsUri: http://access-controls:5080
  collectionsUri: http://nl-app-search-collections:8080
  dataPrepUri: http://data-prep:9072
  encryptionUri: http://nl-app-search-encryption:8080
  engineUri: http://engine:9076
  featureFlagsUri: http://feature-flags:8080
  ingressAuthUrl: http://edge-auth.default.svc.cluster.local:8080/v1/auth
  logLevel: debug
  natsStreamingClusterId: messaging-nats-streaming-cluster
  natsUri: http://messaging-nats-client:4222
  policyDecisionsUri: http://policy-decisions:5080
  qixSessionsUri: http://qix-sessions:8080
  spacesUri: http://spaces:6080
  tokenAuthUri: http://edge-auth:8080
kind: ConfigMap
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
  labels:
    app: nl-app-search
    app.kubernetes.io/component: nl-app-search
    app.kubernetes.io/instance: nl-app-search
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 1.70.0
    chart: nl-app-search-1.70.0
    domain: nlp-cognitive
    heritage: Helm
    release: qlik-default
  name: nl-app-search-configs
  namespace: default
---
apiVersion: v1
data:
  tokenAuthPrivateKey: PLACEHOLDER
  tokenAuthPrivateKeyId: RGloRVNCci1wVGtQbE1jb3dTcF9qR0wyWEVkZDhuZGV5bkpfS3FlcXM4NA==
kind: Secret
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
  labels:
    app: nl-app-search
    app.kubernetes.io/component: nl-app-search
    app.kubernetes.io/instance: nl-app-search
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 1.70.0
    chart: nl-app-search-1.70.0
    domain: nlp-cognitive
    heritage: Helm
    release: qlik-default
  name: nl-app-search-secrets
  namespace: default
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
    prometheus.io/port: "9085"
    prometheus.io/scrape: "true"
  labels:
    app: nl-app-search
    app.kubernetes.io/component: nl-app-search
    app.kubernetes.io/instance: nl-app-search
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 1.70.0
    chart: nl-app-search-1.70.0
    domain: nlp-cognitive
    heritage: Helm
    release: qlik-default
  name: nl-app-search
  namespace: default
spec:
  ports:
  - name: nl-app-search
    port: 9085
    protocol: TCP
    targetPort: 9085
  selector:
    app: nl-app-search
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    release: qlik-default
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
  labels:
    app: nl-app-search
    app.kubernetes.io/component: nl-app-search
    app.kubernetes.io/instance: nl-app-search
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 1.70.0
    chart: nl-app-search-1.70.0
    domain: nlp-cognitive
    heritage: Helm
    release: qlik-default
  name: nl-app-search-apps-metadata
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-storage
  volumeName: nl-app-search
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
  labels:
    app: nl-app-search
    app.kubernetes.io/component: nl-app-search
    app.kubernetes.io/instance: nl-app-search
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 1.70.0
    chart: nl-app-search-1.70.0
    domain: nlp-cognitive
    heritage: Helm
    release: qlik-default
  name: nl-app-search
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nl-app-search
      app.kubernetes.io/name: qliksense
      app.kubernetes.io/part-of: qliksense
      release: qlik-default
  template:
    metadata:
      annotations:
        app.kubernetes.io/name: nl-app-search
        checksum/configs: f49721d96fed0870a89bb72b7d359b68abf1946f4ad997f5b5734fb8b95ea08c
        checksum/secrets: 7eda9e3297aac6fe6c326198224c734e8a0fdc9869d19a3e7187283ce0fe0c53
      labels:
        app: nl-app-search
        app.kubernetes.io/name: qliksense
        app.kubernetes.io/part-of: qliksense
        domain: nlp-cognitive
        messaging-nats-client: "true"
        release: qlik-default
    spec:
      containers:
      - env:
        - name: NATS_CLIENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: TOKEN_AUTH_PRIVATE_KEY_FILE
          value: /run/secrets/qlik.com/nl-app-search/tokenAuthPrivateKey
        - name: TOKEN_AUTH_PRIVATE_KEY_ID_FILE
          value: /run/secrets/qlik.com/nl-app-search/tokenAuthPrivateKeyId
        - name: ACCESS_CONTROLS_URI
          valueFrom:
            configMapKeyRef:
              key: accessControlsUri
              name: nl-app-search-configs
        - name: COLLECTIONS_URI
          valueFrom:
            configMapKeyRef:
              key: collectionsUri
              name: nl-app-search-configs
        - name: DATA_PREP_URI
          valueFrom:
            configMapKeyRef:
              key: dataPrepUri
              name: nl-app-search-configs
        - name: ENCRYPTION_URI
          valueFrom:
            configMapKeyRef:
              key: encryptionUri
              name: nl-app-search-configs
        - name: ENGINE_URI
          valueFrom:
            configMapKeyRef:
              key: engineUri
              name: nl-app-search-configs
        - name: FEATURE_FLAGS_URI
          valueFrom:
            configMapKeyRef:
              key: featureFlagsUri
              name: nl-app-search-configs
        - name: INGRESS_AUTH_URL
          valueFrom:
            configMapKeyRef:
              key: ingressAuthUrl
              name: nl-app-search-configs
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              key: logLevel
              name: nl-app-search-configs
        - name: NATS_STREAMING_CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: natsStreamingClusterId
              name: nl-app-search-configs
        - name: NATS_URI
          valueFrom:
            configMapKeyRef:
              key: natsUri
              name: nl-app-search-configs
        - name: POLICY_DECISIONS_URI
          valueFrom:
            configMapKeyRef:
              key: policyDecisionsUri
              name: nl-app-search-configs
        - name: QIX_SESSIONS_URI
          valueFrom:
            configMapKeyRef:
              key: qixSessionsUri
              name: nl-app-search-configs
        - name: SPACES_URI
          valueFrom:
            configMapKeyRef:
              key: spacesUri
              name: nl-app-search-configs
        - name: TOKEN_AUTH_URI
          valueFrom:
            configMapKeyRef:
              key: tokenAuthUri
              name: nl-app-search-configs
        - name: AUTH_ENABLED
          value: "true"
        - name: NATS_ENABLED
          value: "true"
        - name: NATS_TOKEN_AUTH_ENABLED
          value: "true"
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: OTLP_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: HTTP_PROXY
          valueFrom:
            configMapKeyRef:
              key: httpProxy
              name: qliksense-configs
        - name: HTTPS_PROXY
          valueFrom:
            configMapKeyRef:
              key: httpsProxy
              name: qliksense-configs
        - name: NO_PROXY
          valueFrom:
            configMapKeyRef:
              key: noProxy
              name: qliksense-configs
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              key: mongodbUri
              name: qliksense-secrets
        - name: MONGODB_URI_FILE
          value: /run/secrets/qlik.com/qliksense/mongodbUri
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redisPassword
              name: qliksense-secrets
        - name: REDIS_PASSWORD_FILE
          value: /run/secrets/qlik.com/qliksense/redisPassword
        - name: REDIS_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              key: redisEncryptionKey
              name: qliksense-secrets
        - name: REDIS_ENCRYPTION_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/redisEncryptionKey
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              key: minioRootUser
              name: qliksense-secrets
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: minioRootPassword
              name: qliksense-secrets
        - name: FORT_ID
          valueFrom:
            configMapKeyRef:
              key: fortId
              name: qliksense-configs
        - name: FORT_IOT_CERTIFICATE_ID
          valueFrom:
            configMapKeyRef:
              key: fortIotCertificateId
              name: qliksense-configs
        - name: FORT_IOT_THING_NAME
          valueFrom:
            configMapKeyRef:
              key: fortressId
              name: qliksense-configs
        - name: FORT_NAME
          valueFrom:
            configMapKeyRef:
              key: fortName
              name: qliksense-configs
        - name: FORT_ORIGIN_URL
          valueFrom:
            configMapKeyRef:
              key: fortOriginUrl
              name: qliksense-configs
        - name: FORT_TENANT_URL
          valueFrom:
            configMapKeyRef:
              key: fortTenantUrl
              name: qliksense-configs
        - name: FORTRESS_IOT_THING_ROLE_ALIAS_NAME
          valueFrom:
            configMapKeyRef:
              key: iotThingRoleAliasName
              name: qliksense-configs
        - name: FORTRESS_ID
          valueFrom:
            configMapKeyRef:
              key: fortressId
              name: qliksense-configs
        - name: FORTRESS_DEVICE_CREDENTIAL_ENDPOINT
          valueFrom:
            configMapKeyRef:
              key: iotCredentialUrl
              name: qliksense-configs
        - name: FORTRESS_IOT_CREDENTIAL_ENDPOINT
          value: https://$(FORTRESS_DEVICE_CREDENTIAL_ENDPOINT)
        - name: FORTRESS_REGION
          valueFrom:
            configMapKeyRef:
              key: iotAwsRegion
              name: qliksense-configs
        - name: FORTRESS_THING_CA_FILE
          value: /run/secrets/qlik.com/qliksense/iotRootCa
        - name: FORTRESS_THING_CERT_FILE
          value: /run/secrets/qlik.com/qliksense/iotFortThingCert
        - name: FORTRESS_THING_DATA_ENDPOINT
          valueFrom:
            configMapKeyRef:
              key: fortressThingDataEndpoint
              name: qliksense-configs
        - name: FORTRESS_THING_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotFortThingPrivateKey
        - name: FORTRESS_THING_NAME
          valueFrom:
            configMapKeyRef:
              key: thingName
              name: qliksense-configs
        - name: FORT_WEB_INTEGRATION_ID
          valueFrom:
            configMapKeyRef:
              key: fortWebIntegrationId
              name: qliksense-configs
        - name: FORT_TENANT_ID
          valueFrom:
            configMapKeyRef:
              key: tenantId
              name: qliksense-configs
        - name: FORT_PRIVATE_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotThingPrivateKey
        - name: FORT_IOT_PRIVATE_KEY_FILE
          value: /run/secrets/qlik.com/qliksense/iotThingPrivateKey
        - name: JAEGER_DISABLED
          value: "true"
        - name: DISABLE_OTLP
          value: "true"
        image: ghcr.io/qlik-download/nl-app-search:1.70.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /live
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: nl-app-search
        ports:
        - containerPort: 9085
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        volumeMounts:
        - mountPath: /run/secrets/qlik.com/nl-app-search
          name: nl-app-search-secrets
          readOnly: true
        - mountPath: /qlik/apps-metadata
          name: nl-app-search-apps-metadata
          readOnly: false
        - mountPath: /etc/ssl/certs
          name: ca-certificates
        - mountPath: /run/secrets/qlik.com/qliksense
          name: qliksense-secrets
          readOnly: true
      imagePullSecrets:
      - name: artifactory-docker-secret
      volumes:
      - name: nl-app-search-secrets
        secret:
          secretName: nl-app-search-secrets
      - name: nl-app-search-apps-metadata
        persistentVolumeClaim:
          claimName: nl-app-search-apps-metadata
      - name: ca-certificates
        persistentVolumeClaim:
          claimName: ca-certificates
      - name: qliksense-secrets
        secret:
          secretName: qliksense-secrets
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    app.kubernetes.io/instance: qliksense
    app.kubernetes.io/managed-by: qliksense-operator
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/version: PLACEHOLDER
    nginx.ingress.kubernetes.io/auth-response-headers: Authorization
    nginx.ingress.kubernetes.io/auth-url: http://edge-auth.default.svc.cluster.local:8080/v1/auth
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite (?i)/api/(.*) /$1 break;
    nginx.ingress.kubernetes.io/enable-cors: "true"
  labels:
    app: nl-app-search
    app.kubernetes.io/component: nl-app-search
    app.kubernetes.io/instance: nl-app-search
    app.kubernetes.io/name: qliksense
    app.kubernetes.io/part-of: qliksense
    app.kubernetes.io/version: 1.70.0
    chart: nl-app-search-1.70.0
    domain: nlp-cognitive
    heritage: Helm
    release: qlik-default
  name: nl-app-search
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - backend:
          service:
            name: nl-app-search
            port:
              number: 9085
        path: /api/v1/nlsearch
        pathType: ImplementationSpecific
