apiVersion: v1
data:
  tokenAuthPrivateKey: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1JR2tBZ0VCQkRCa1RJbXhheThpZGFJc3QxWW9oYmdwZ0pOcURHNGVQaWFERCtXcThvd2x1Y3Y3MTdRT1pxYmQKS1AxU1l1a2RHOXVnQndZRks0RUVBQ0toWkFOaUFBU25SUlpVYmUweHIzZFFhTWU2ZmhKTGtMYmxNMGZIM01UYQoweU5aNjhSWk5FM2RpR1NXRjhYbHZhZUppS0IvWjFXbmdmeDJzcmxmNVdZdklpRktiV0R5dXVEejhNaUpnNEs2CmI2VEdzVktabDdJa2RBeDkrRzRxUWFxODV5WWJvbUE9Ci0tLS0tRU5EIEVDIFBSSVZBVEUgS0VZLS0tLS0K
  tokenAuthPrivateKeyId: RGloRVNCci1wVGtQbE1jb3dTcF9qR0wyWEVkZDhuZGV5bkpfS3FlcXM4NA==
kind: Secret
metadata:
  labels:
    app: nl-app-search
    app.kubernetes.io/component: nl-app-search
    app.kubernetes.io/instance: nl-app-search
    app.kubernetes.io/name: nl-app-search
    app.kubernetes.io/version: 1.67.0
    chart: nl-app-search-1.67.0
    domain: nlp-cognitive
    heritage: Helm
    release: nl-app-search
  name: nl-app-search-secrets
  namespace: default
type: Opaque
---
apiVersion: v1
data:
  accessControlsUri: http://access-controls:5080
  collectionsUri: http://nl-app-search-collections:8080
  dataPrepUri: http://data-prep:9072
  encryptionUri: http://nl-app-search-encryption:8080
  engineUri: http://engine:9076
  featureFlagsUri: http://feature-flags:8080
  ingressAuthUrl: http://edge-auth.$(NAMESPACE).svc.cluster.local:8080/v1/auth
  logLevel: debug
  natsStreamingClusterId: messaging-nats-streaming-cluster
  natsUri: http://messaging-nats-client:4222
  policyDecisionsUri: http://policy-decisions:5080
  qixSessionsUri: http://qix-sessions:8080
  spacesUri: http://spaces:6080
  tokenAuthUri: http://edge-auth:8080
kind: ConfigMap
metadata:
  labels:
    app: nl-app-search
    app.kubernetes.io/component: nl-app-search
    app.kubernetes.io/instance: nl-app-search
    app.kubernetes.io/name: nl-app-search
    app.kubernetes.io/version: 1.67.0
    chart: nl-app-search-1.67.0
    domain: nlp-cognitive
    heritage: Helm
    release: nl-app-search
  name: nl-app-search-configs
  namespace: default
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: nl-app-search
    app.kubernetes.io/component: nl-app-search
    app.kubernetes.io/instance: nl-app-search
    app.kubernetes.io/name: nl-app-search
    app.kubernetes.io/version: 1.67.0
    chart: nl-app-search-1.67.0
    domain: nlp-cognitive
    heritage: Helm
    release: nl-app-search
  name: nl-app-search-apps-metadata
  namespace: default
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9085"
    prometheus.io/scrape: "true"
  labels:
    app: nl-app-search
    app.kubernetes.io/component: nl-app-search
    app.kubernetes.io/instance: nl-app-search
    app.kubernetes.io/name: nl-app-search
    app.kubernetes.io/version: 1.67.0
    chart: nl-app-search-1.67.0
    domain: nlp-cognitive
    heritage: Helm
    release: nl-app-search
  name: nl-app-search
  namespace: default
spec:
  ports:
    - name: nl-app-search
      port: 9085
      protocol: TCP
      targetPort: 9085
  selector:
    app: nl-app-search
    release: nl-app-search
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nl-app-search
    app.kubernetes.io/component: nl-app-search
    app.kubernetes.io/instance: nl-app-search
    app.kubernetes.io/name: nl-app-search
    app.kubernetes.io/version: 1.67.0
    chart: nl-app-search-1.67.0
    domain: nlp-cognitive
    heritage: Helm
    release: nl-app-search
  name: nl-app-search
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nl-app-search
      release: nl-app-search
  template:
    metadata:
      annotations:
        checksum/configs: 7cffe3a8d3cff1d8590ec792583993a49601fc0a6a0bff1a4f3092a714995cf0
        checksum/secrets: 549743df346367fbe019b36b72947a1627ca97d03de61708e10c92e6bdad37ff
      labels:
        app: nl-app-search
        domain: nlp-cognitive
        messaging-nats-client: "true"
        release: nl-app-search
    spec:
      containers:
        - env:
            - name: NATS_CLIENT_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: TOKEN_AUTH_PRIVATE_KEY_FILE
              value: /run/secrets/qlik.com/nl-app-search/tokenAuthPrivateKey
            - name: TOKEN_AUTH_PRIVATE_KEY_ID_FILE
              value: /run/secrets/qlik.com/nl-app-search/tokenAuthPrivateKeyId
            - name: ACCESS_CONTROLS_URI
              valueFrom:
                configMapKeyRef:
                  key: accessControlsUri
                  name: nl-app-search-configs
            - name: COLLECTIONS_URI
              valueFrom:
                configMapKeyRef:
                  key: collectionsUri
                  name: nl-app-search-configs
            - name: DATA_PREP_URI
              valueFrom:
                configMapKeyRef:
                  key: dataPrepUri
                  name: nl-app-search-configs
            - name: ENCRYPTION_URI
              valueFrom:
                configMapKeyRef:
                  key: encryptionUri
                  name: nl-app-search-configs
            - name: ENGINE_URI
              valueFrom:
                configMapKeyRef:
                  key: engineUri
                  name: nl-app-search-configs
            - name: FEATURE_FLAGS_URI
              valueFrom:
                configMapKeyRef:
                  key: featureFlagsUri
                  name: nl-app-search-configs
            - name: INGRESS_AUTH_URL
              valueFrom:
                configMapKeyRef:
                  key: ingressAuthUrl
                  name: nl-app-search-configs
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: logLevel
                  name: nl-app-search-configs
            - name: NATS_STREAMING_CLUSTER_ID
              valueFrom:
                configMapKeyRef:
                  key: natsStreamingClusterId
                  name: nl-app-search-configs
            - name: NATS_URI
              valueFrom:
                configMapKeyRef:
                  key: natsUri
                  name: nl-app-search-configs
            - name: POLICY_DECISIONS_URI
              valueFrom:
                configMapKeyRef:
                  key: policyDecisionsUri
                  name: nl-app-search-configs
            - name: QIX_SESSIONS_URI
              valueFrom:
                configMapKeyRef:
                  key: qixSessionsUri
                  name: nl-app-search-configs
            - name: SPACES_URI
              valueFrom:
                configMapKeyRef:
                  key: spacesUri
                  name: nl-app-search-configs
            - name: TOKEN_AUTH_URI
              valueFrom:
                configMapKeyRef:
                  key: tokenAuthUri
                  name: nl-app-search-configs
            - name: DISABLE_OTLP
              value: "true"
            - name: JAEGER_DISABLED
              value: "true"
            - name: AUTH_ENABLED
              value: "true"
            - name: NATS_ENABLED
              value: "true"
            - name: NATS_TOKEN_AUTH_ENABLED
              value: "true"
            - name: JAEGER_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTLP_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: HTTP_PROXY
              valueFrom:
                configMapKeyRef:
                  key: httpProxy
                  name: qliksense-configs
            - name: HTTPS_PROXY
              valueFrom:
                configMapKeyRef:
                  key: httpsProxy
                  name: qliksense-configs
            - name: NO_PROXY
              valueFrom:
                configMapKeyRef:
                  key: noProxy
                  name: qliksense-configs
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  key: mongodbUri
                  name: qliksense-secrets
            - name: MONGODB_URI_FILE
              value: /run/secrets/qlik.com/qliksense/mongodbUri
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: redisPassword
                  name: qliksense-secrets
            - name: REDIS_PASSWORD_FILE
              value: /run/secrets/qlik.com/qliksense/redisPassword
          image: ghcr.io/qlik-download/nl-app-search:1.67.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /live
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: nl-app-search
          ports:
            - containerPort: 9085
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: /run/secrets/qlik.com/nl-app-search
              name: nl-app-search-secrets
              readOnly: true
            - mountPath: /qlik/apps-metadata
              name: nl-app-search-apps-metadata
              readOnly: false
            - mountPath: /etc/ssl/certs
              name: ca-certificates
            - mountPath: /run/secrets/qlik.com/qliksense
              name: qliksense-secrets
      imagePullSecrets:
        - name: artifactory-docker-secret
      volumes:
        - name: nl-app-search-secrets
          secret:
            secretName: nl-app-search-secrets
        - name: nl-app-search-apps-metadata
          persistentVolumeClaim:
            claimName: nl-app-search-apps-metadata
        - name: ca-certificates
          persistentVolumeClaim:
            claimName: ca-certificates
        - name: qliksense-secrets
          secret:
            secretName: qliksense-secrets
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/auth-response-headers: Authorization
    nginx.ingress.kubernetes.io/auth-url: http://edge-auth.$(NAMESPACE).svc.cluster.local:8080/v1/auth
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite (?i)/api/(.*) /$1 break;
    nginx.ingress.kubernetes.io/enable-cors: "true"
  labels:
    app: nl-app-search
    app.kubernetes.io/component: nl-app-search
    app.kubernetes.io/instance: nl-app-search
    app.kubernetes.io/name: nl-app-search
    app.kubernetes.io/version: 1.67.0
    chart: nl-app-search-1.67.0
    domain: nlp-cognitive
    heritage: Helm
    release: nl-app-search
  name: nl-app-search
  namespace: default
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - backend:
              service:
                name: nl-app-search
                port:
                  number: 9085
            path: /api/v1/nlsearch
            pathType: ImplementationSpecific
